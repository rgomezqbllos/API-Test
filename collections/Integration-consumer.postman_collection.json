{
	"info": {
		"_postman_id": "efee3fd3-503c-4c78-932e-fc6164d057ca",
		"name": "Integration-consumer",
		"description": "OttoBackend-Integration consumer messages",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31845322",
		"_collection_link": "https://otto-api.postman.co/workspace/API-Otto~2ba38d06-1a93-44bc-9a21-9cbd6717ed5a/collection/31845322-efee3fd3-503c-4c78-932e-fc6164d057ca?action=share&source=collection_link&creator=31845322"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a747a840-21f2-4339-953a-9e40b5967f74",
				"exec": [
					"pm.collectionVariables.set('dataFile', JSON.stringify(pm.iterationData.toObject()));"
				],
				"type": "text/javascript"
			}
		}
	],
	"item": [
		{
			"name": "ext",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "qualification",
							"item": [
								{
									"name": "/ext/v1/qualification",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&qualificationCodes=string&staffCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"qualification"
											],
											"query": [
												{
													"key": "qualificationCodes",
													"value": "string",
													"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
												},
												{
													"key": "qualificationCodes",
													"value": "string",
													"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
												},
												{
													"key": "staffCodes",
													"value": "string",
													"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
												},
												{
													"key": "staffCodes",
													"value": "string",
													"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
												},
												{
													"key": "relationType",
													"value": "LINK",
													"description": "Identifiers of staff to filter for."
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
												},
												{
													"key": "endDate",
													"value": "{{endDate}}",
													"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										}
									},
									"response": [
										{
											"name": "Detailed qualification information of staff.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"qualification"
													],
													"query": [
														{
															"key": "qualificationCodes",
															"value": "string",
															"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"qualificationCode\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"1948-03-08\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"1954-02-01\"\n        },\n        {\n          \"startDate\": \"2016-03-14\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"endDate\": \"1965-02-16\"\n        }\n      ]\n    },\n    {\n      \"qualificationCode\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"1957-12-18\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"endDate\": \"2006-11-07\"\n        },\n        {\n          \"startDate\": \"1957-11-07\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"2001-10-05\"\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 6685,\n  \"currentPage\": 7553,\n  \"totalPages\": 4076\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"qualification"
													],
													"query": [
														{
															"key": "qualificationCodes",
															"value": "string",
															"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"qualification"
													],
													"query": [
														{
															"key": "qualificationCodes",
															"value": "string",
															"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"qualification"
													],
													"query": [
														{
															"key": "qualificationCodes",
															"value": "string",
															"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"qualification"
													],
													"query": [
														{
															"key": "qualificationCodes",
															"value": "string",
															"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/qualification?qualificationCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"qualification"
													],
													"query": [
														{
															"key": "qualificationCodes",
															"value": "string",
															"description": "List of unique qualification codes to filter the results. Only qualifications matching the specified codes will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter qualifications whose assignment begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter qualifications whose assignment ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "staff",
							"item": [
								{
									"name": "bookOnBookOff",
									"item": [
										{
											"name": "/ext/v1/staff/bookOnBookOff",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&depotCodes=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"bookOnBookOff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Filters for bookOn bookOff that start on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Filters for bookOn bookOff that end on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Staff bookOnBookOff information.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"code\": \"string\",\n      \"bookOnBookOff\": [\n        {\n          \"type\": \"BOOK_ON\",\n          \"hour\": \"1975-03-16T12:25:01.828Z\",\n          \"day\": \"1969-11-07\"\n        },\n        {\n          \"type\": \"BOOK_ON\",\n          \"hour\": \"1979-07-03T13:46:35.251Z\",\n          \"day\": \"1999-06-26\"\n        }\n      ],\n      \"name\": \"string\",\n      \"surname\": \"string\"\n    },\n    {\n      \"code\": \"string\",\n      \"bookOnBookOff\": [\n        {\n          \"type\": \"BOOK_ON\",\n          \"hour\": \"1994-09-14T06:20:12.788Z\",\n          \"day\": \"1998-04-20\"\n        },\n        {\n          \"type\": \"BOOK_ON\",\n          \"hour\": \"1968-02-07T04:15:27.170Z\",\n          \"day\": \"2009-03-29\"\n        }\n      ],\n      \"name\": \"string\",\n      \"surname\": \"string\"\n    }\n  ],\n  \"totalRecords\": 9834,\n  \"currentPage\": 1872,\n  \"totalPages\": 3794\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/bookOnBookOff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"bookOnBookOff"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for bookOn bookOff that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for bookOn bookOff that end on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "detail",
									"item": [
										{
											"name": "/ext/v1/staff/detail",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&depotCodes=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"detail"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Detailed information of staff.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"staffCode\": \"string\",\n      \"name\": \"string\",\n      \"surname\": \"string\",\n      \"userName\": \"string\",\n      \"phone\": \"string\",\n      \"email\": \"string\",\n      \"address\": \"string\",\n      \"language\": \"string\",\n      \"dateOfBirth\": \"string\",\n      \"active\": false,\n      \"areaName\": \"string\",\n      \"collectiveName\": \"string\",\n      \"contractKindName\": \"string\",\n      \"nationalityName\": \"string\",\n      \"workPairingName\": \"string\",\n      \"depots\": [\n        {\n          \"depotsCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"2024-06-21\",\n          \"endDate\": \"1985-05-16\"\n        },\n        {\n          \"depotsCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"1959-08-28\",\n          \"endDate\": \"1950-09-09\"\n        }\n      ],\n      \"workingGroups\": [\n        {\n          \"workingGroupCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"1971-03-18\",\n          \"endDate\": \"1979-02-09\"\n        },\n        {\n          \"workingGroupCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"1945-11-30\",\n          \"endDate\": \"2000-08-28\"\n        }\n      ],\n      \"businessUnits\": [\n        {\n          \"businessUnitCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"1972-10-02\",\n          \"endDate\": \"2023-07-08\"\n        },\n        {\n          \"businessUnitCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"startDate\": \"2004-06-22\",\n          \"endDate\": \"2024-01-13\"\n        }\n      ],\n      \"qualifications\": [\n        {\n          \"qualificationCode\": \"string\",\n          \"startDate\": \"1978-08-14\",\n          \"endDate\": \"1968-06-11\"\n        },\n        {\n          \"qualificationCode\": \"string\",\n          \"startDate\": \"1952-10-05\",\n          \"endDate\": \"2010-05-20\"\n        }\n      ]\n    },\n    {\n      \"staffCode\": \"string\",\n      \"name\": \"string\",\n      \"surname\": \"string\",\n      \"userName\": \"string\",\n      \"phone\": \"string\",\n      \"email\": \"string\",\n      \"address\": \"string\",\n      \"language\": \"string\",\n      \"dateOfBirth\": \"string\",\n      \"active\": true,\n      \"areaName\": \"string\",\n      \"collectiveName\": \"string\",\n      \"contractKindName\": \"string\",\n      \"nationalityName\": \"string\",\n      \"workPairingName\": \"string\",\n      \"depots\": [\n        {\n          \"depotsCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"2021-12-03\",\n          \"endDate\": \"1948-03-17\"\n        },\n        {\n          \"depotsCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"startDate\": \"1948-08-24\",\n          \"endDate\": \"1988-06-04\"\n        }\n      ],\n      \"workingGroups\": [\n        {\n          \"workingGroupCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"1952-04-08\",\n          \"endDate\": \"2017-01-30\"\n        },\n        {\n          \"workingGroupCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"startDate\": \"1989-09-30\",\n          \"endDate\": \"1959-06-01\"\n        }\n      ],\n      \"businessUnits\": [\n        {\n          \"businessUnitCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"startDate\": \"2014-07-17\",\n          \"endDate\": \"2022-05-29\"\n        },\n        {\n          \"businessUnitCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"startDate\": \"1949-06-07\",\n          \"endDate\": \"2007-03-13\"\n        }\n      ],\n      \"qualifications\": [\n        {\n          \"qualificationCode\": \"string\",\n          \"startDate\": \"1971-02-17\",\n          \"endDate\": \"1975-09-03\"\n        },\n        {\n          \"qualificationCode\": \"string\",\n          \"startDate\": \"1987-09-25\",\n          \"endDate\": \"1991-09-12\"\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 2564,\n  \"currentPage\": 9879,\n  \"totalPages\": 2045\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/detail?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"detail"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "deactivate",
									"item": [
										{
											"name": "/ext/v1/staff/deactivate",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"staffCodes\": [\n    \"string\",\n    \"string\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/deactivate?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"deactivate"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												},
												"description": "Allows bulk deactivation of one or more staff member. No records are physically deleted; the “active” flag is set to false for each provided staff code."
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staffCodes\": [\n    \"string\",\n    \"string\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/deactivate?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"deactivate"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staffCodes\": [\n    \"string\",\n    \"string\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/deactivate?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"deactivate"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staffCodes\": [\n    \"string\",\n    \"string\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/deactivate?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"deactivate"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staffCodes\": [\n    \"string\",\n    \"string\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/deactivate?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"deactivate"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict due to duplicate or immutable field mismatch",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"staffCodes\": [\n    \"string\",\n    \"string\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/deactivate?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"deactivate"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{staffCode}",
									"item": [
										{
											"name": "detail",
											"item": [
												{
													"name": "/ext/v1/staff/{staffCode}/detail/",
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"string\",\n  \"surname\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"language\": \"string\",\n  \"areaName\": \"string\",\n  \"collectiveName\": \"string\",\n  \"contractKindName\": \"string\",\n  \"nationalityName\": \"string\",\n  \"workPairingName\": \"string\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/detail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"detail"
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) Unique identifier of the staff member to update"
																}
															]
														},
														"description": "Update non-basic information of a staff member"
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"string\",\n  \"surname\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"language\": \"string\",\n  \"areaName\": \"string\",\n  \"collectiveName\": \"string\",\n  \"contractKindName\": \"string\",\n  \"nationalityName\": \"string\",\n  \"workPairingName\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"string\",\n  \"surname\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"language\": \"string\",\n  \"areaName\": \"string\",\n  \"collectiveName\": \"string\",\n  \"contractKindName\": \"string\",\n  \"nationalityName\": \"string\",\n  \"workPairingName\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"string\",\n  \"surname\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"language\": \"string\",\n  \"areaName\": \"string\",\n  \"collectiveName\": \"string\",\n  \"contractKindName\": \"string\",\n  \"nationalityName\": \"string\",\n  \"workPairingName\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"string\",\n  \"surname\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"language\": \"string\",\n  \"areaName\": \"string\",\n  \"collectiveName\": \"string\",\n  \"contractKindName\": \"string\",\n  \"nationalityName\": \"string\",\n  \"workPairingName\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"name\": \"string\",\n  \"surname\": \"string\",\n  \"phone\": \"string\",\n  \"address\": \"string\",\n  \"language\": \"string\",\n  \"areaName\": \"string\",\n  \"collectiveName\": \"string\",\n  \"contractKindName\": \"string\",\n  \"nationalityName\": \"string\",\n  \"workPairingName\": \"string\"\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "inactivity",
											"item": [
												{
													"name": "/ext/v1/staff/{staffCode}/inactivity",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  },\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"inactivity"
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Batch add and delete staff inactivity periods"
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  },\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  },\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  },\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  },\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  },\n  {\n    \"oldValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    },\n    \"newValue\": {\n      \"startDate\": \"2025-06-20\",\n      \"endDate\": \"2025-08-20\"\n    }\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/ext/v1/staff/{staffCode}/inactivity",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"inactivity"
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) Identifier code for the staff member to update"
																}
															]
														},
														"description": "Batch add and delete staff inactivity periods"
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "[\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  }\n]",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/ext/v1/staff/:staffCode/inactivity",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity?startDate={{startDate}}&endDate={{endDate}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"inactivity"
															],
															"query": [
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date of the inactivity to delete"
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "End date of the inactivity to delete"
																}
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity?startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the inactivity to delete"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the inactivity to delete"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity?startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the inactivity to delete"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the inactivity to delete"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity?startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the inactivity to delete"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the inactivity to delete"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity?startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the inactivity to delete"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the inactivity to delete"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/inactivity?startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"inactivity"
																	],
																	"query": [
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the inactivity to delete"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the inactivity to delete"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "customProperty",
											"item": [
												{
													"name": "/ext/v1/staff/:staffCode/customProperty",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"customPropertyName\": \"string\",\n  \"updates\": [\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1957-09-13\",\n        \"endDate\": \"2018-01-07\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1996-05-16\",\n        \"endDate\": \"1961-12-18\"\n      }\n    },\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1952-01-07\",\n        \"endDate\": \"1972-02-13\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"2002-03-03\",\n        \"endDate\": \"2006-05-14\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"customProperty"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) Identifier code for the staff member to update"
																}
															]
														}
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"updates\": [\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1957-09-13\",\n        \"endDate\": \"2018-01-07\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1996-05-16\",\n        \"endDate\": \"1961-12-18\"\n      }\n    },\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1952-01-07\",\n        \"endDate\": \"1972-02-13\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"2002-03-03\",\n        \"endDate\": \"2006-05-14\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"updates\": [\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1957-09-13\",\n        \"endDate\": \"2018-01-07\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1996-05-16\",\n        \"endDate\": \"1961-12-18\"\n      }\n    },\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1952-01-07\",\n        \"endDate\": \"1972-02-13\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"2002-03-03\",\n        \"endDate\": \"2006-05-14\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"updates\": [\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1957-09-13\",\n        \"endDate\": \"2018-01-07\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1996-05-16\",\n        \"endDate\": \"1961-12-18\"\n      }\n    },\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1952-01-07\",\n        \"endDate\": \"1972-02-13\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"2002-03-03\",\n        \"endDate\": \"2006-05-14\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"updates\": [\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1957-09-13\",\n        \"endDate\": \"2018-01-07\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1996-05-16\",\n        \"endDate\": \"1961-12-18\"\n      }\n    },\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1952-01-07\",\n        \"endDate\": \"1972-02-13\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"2002-03-03\",\n        \"endDate\": \"2006-05-14\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"updates\": [\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1957-09-13\",\n        \"endDate\": \"2018-01-07\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1996-05-16\",\n        \"endDate\": \"1961-12-18\"\n      }\n    },\n    {\n      \"oldValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"1952-01-07\",\n        \"endDate\": \"1972-02-13\"\n      },\n      \"newValue\": {\n        \"value\": \"string\",\n        \"startDate\": \"2002-03-03\",\n        \"endDate\": \"2006-05-14\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/ext/v1/staff/:staffCode/customProperty",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"customPropertyName\": \"string\",\n  \"values\": [\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1982-11-28\",\n      \"endDate\": \"2022-02-16\"\n    },\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1984-07-04\",\n      \"endDate\": \"2006-04-05\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"customProperty"
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) Identifier code for the staff member to update"
																}
															]
														}
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"values\": [\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1982-11-28\",\n      \"endDate\": \"2022-02-16\"\n    },\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1984-07-04\",\n      \"endDate\": \"2006-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"values\": [\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1982-11-28\",\n      \"endDate\": \"2022-02-16\"\n    },\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1984-07-04\",\n      \"endDate\": \"2006-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"values\": [\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1982-11-28\",\n      \"endDate\": \"2022-02-16\"\n    },\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1984-07-04\",\n      \"endDate\": \"2006-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"values\": [\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1982-11-28\",\n      \"endDate\": \"2022-02-16\"\n    },\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1984-07-04\",\n      \"endDate\": \"2006-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"customPropertyName\": \"string\",\n  \"values\": [\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1982-11-28\",\n      \"endDate\": \"2022-02-16\"\n    },\n    {\n      \"value\": \"string\",\n      \"startDate\": \"1984-07-04\",\n      \"endDate\": \"2006-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/ext/v1/staff/:staffCode/customProperty",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?customPropertyName=string&value=string&startDate={{startDate}}&endDate={{endDate}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"customProperty"
															],
															"query": [
																{
																	"key": "customPropertyName",
																	"value": "string",
																	"description": "(Required) Name of the custom property"
																},
																{
																	"key": "value",
																	"value": "string",
																	"description": "(Required) Value of the dynamic property"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date of the staff property value"
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "End date of the staff property value"
																}
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?customPropertyName=string&value=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "customPropertyName",
																			"value": "string",
																			"description": "(Required) Name of the custom property"
																		},
																		{
																			"key": "value",
																			"value": "string",
																			"description": "(Required) Value of the dynamic property"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the staff property value"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the staff property value"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?customPropertyName=string&value=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "customPropertyName",
																			"value": "string",
																			"description": "(Required) Name of the custom property"
																		},
																		{
																			"key": "value",
																			"value": "string",
																			"description": "(Required) Value of the dynamic property"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the staff property value"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the staff property value"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?customPropertyName=string&value=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "customPropertyName",
																			"value": "string",
																			"description": "(Required) Name of the custom property"
																		},
																		{
																			"key": "value",
																			"value": "string",
																			"description": "(Required) Value of the dynamic property"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the staff property value"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the staff property value"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?customPropertyName=string&value=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "customPropertyName",
																			"value": "string",
																			"description": "(Required) Name of the custom property"
																		},
																		{
																			"key": "value",
																			"value": "string",
																			"description": "(Required) Value of the dynamic property"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the staff property value"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the staff property value"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/customProperty?customPropertyName=string&value=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"customProperty"
																	],
																	"query": [
																		{
																			"key": "customPropertyName",
																			"value": "string",
																			"description": "(Required) Name of the custom property"
																		},
																		{
																			"key": "value",
																			"value": "string",
																			"description": "(Required) Value of the dynamic property"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the staff property value"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "End date of the staff property value"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "operationalGrouping",
											"item": [
												{
													"name": "/ext/v1/staff/:staffCode/operationalGrouping",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"depot\": [\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1988-03-09\",\n        \"endDate\": \"1953-09-20\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2006-11-13\",\n        \"endDate\": \"1952-10-22\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1974-02-05\",\n        \"endDate\": \"1983-04-12\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1949-11-08\",\n        \"endDate\": \"2010-06-09\"\n      }\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1962-10-12\",\n        \"endDate\": \"1978-07-31\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2009-06-25\",\n        \"endDate\": \"1948-10-31\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2019-06-01\",\n        \"endDate\": \"1950-11-29\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2002-10-22\",\n        \"endDate\": \"1988-04-28\"\n      }\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1984-07-22\",\n        \"endDate\": \"1976-12-26\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2003-07-18\",\n        \"endDate\": \"1964-12-08\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1959-08-07\",\n        \"endDate\": \"2008-10-31\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2008-05-01\",\n        \"endDate\": \"1989-06-11\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"operationalGrouping"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1988-03-09\",\n        \"endDate\": \"1953-09-20\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2006-11-13\",\n        \"endDate\": \"1952-10-22\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1974-02-05\",\n        \"endDate\": \"1983-04-12\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1949-11-08\",\n        \"endDate\": \"2010-06-09\"\n      }\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1962-10-12\",\n        \"endDate\": \"1978-07-31\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2009-06-25\",\n        \"endDate\": \"1948-10-31\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2019-06-01\",\n        \"endDate\": \"1950-11-29\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2002-10-22\",\n        \"endDate\": \"1988-04-28\"\n      }\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1984-07-22\",\n        \"endDate\": \"1976-12-26\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2003-07-18\",\n        \"endDate\": \"1964-12-08\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1959-08-07\",\n        \"endDate\": \"2008-10-31\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2008-05-01\",\n        \"endDate\": \"1989-06-11\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1988-03-09\",\n        \"endDate\": \"1953-09-20\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2006-11-13\",\n        \"endDate\": \"1952-10-22\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1974-02-05\",\n        \"endDate\": \"1983-04-12\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1949-11-08\",\n        \"endDate\": \"2010-06-09\"\n      }\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1962-10-12\",\n        \"endDate\": \"1978-07-31\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2009-06-25\",\n        \"endDate\": \"1948-10-31\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2019-06-01\",\n        \"endDate\": \"1950-11-29\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2002-10-22\",\n        \"endDate\": \"1988-04-28\"\n      }\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1984-07-22\",\n        \"endDate\": \"1976-12-26\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2003-07-18\",\n        \"endDate\": \"1964-12-08\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1959-08-07\",\n        \"endDate\": \"2008-10-31\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2008-05-01\",\n        \"endDate\": \"1989-06-11\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1988-03-09\",\n        \"endDate\": \"1953-09-20\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2006-11-13\",\n        \"endDate\": \"1952-10-22\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1974-02-05\",\n        \"endDate\": \"1983-04-12\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1949-11-08\",\n        \"endDate\": \"2010-06-09\"\n      }\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1962-10-12\",\n        \"endDate\": \"1978-07-31\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2009-06-25\",\n        \"endDate\": \"1948-10-31\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2019-06-01\",\n        \"endDate\": \"1950-11-29\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2002-10-22\",\n        \"endDate\": \"1988-04-28\"\n      }\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1984-07-22\",\n        \"endDate\": \"1976-12-26\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2003-07-18\",\n        \"endDate\": \"1964-12-08\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1959-08-07\",\n        \"endDate\": \"2008-10-31\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2008-05-01\",\n        \"endDate\": \"1989-06-11\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1988-03-09\",\n        \"endDate\": \"1953-09-20\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2006-11-13\",\n        \"endDate\": \"1952-10-22\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1974-02-05\",\n        \"endDate\": \"1983-04-12\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1949-11-08\",\n        \"endDate\": \"2010-06-09\"\n      }\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1962-10-12\",\n        \"endDate\": \"1978-07-31\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2009-06-25\",\n        \"endDate\": \"1948-10-31\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2019-06-01\",\n        \"endDate\": \"1950-11-29\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2002-10-22\",\n        \"endDate\": \"1988-04-28\"\n      }\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1984-07-22\",\n        \"endDate\": \"1976-12-26\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2003-07-18\",\n        \"endDate\": \"1964-12-08\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1959-08-07\",\n        \"endDate\": \"2008-10-31\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2008-05-01\",\n        \"endDate\": \"1989-06-11\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1988-03-09\",\n        \"endDate\": \"1953-09-20\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2006-11-13\",\n        \"endDate\": \"1952-10-22\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1974-02-05\",\n        \"endDate\": \"1983-04-12\"\n      },\n      \"oldValue\": {\n        \"depotsCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"1949-11-08\",\n        \"endDate\": \"2010-06-09\"\n      }\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1962-10-12\",\n        \"endDate\": \"1978-07-31\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2009-06-25\",\n        \"endDate\": \"1948-10-31\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2019-06-01\",\n        \"endDate\": \"1950-11-29\"\n      },\n      \"oldValue\": {\n        \"workingGroupCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2002-10-22\",\n        \"endDate\": \"1988-04-28\"\n      }\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1984-07-22\",\n        \"endDate\": \"1976-12-26\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"TRANSFER\",\n        \"startDate\": \"2003-07-18\",\n        \"endDate\": \"1964-12-08\"\n      }\n    },\n    {\n      \"newValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"1959-08-07\",\n        \"endDate\": \"2008-10-31\"\n      },\n      \"oldValue\": {\n        \"businessUnitCode\": \"string\",\n        \"relationType\": \"LINK\",\n        \"startDate\": \"2008-05-01\",\n        \"endDate\": \"1989-06-11\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/ext/v1/staff/{staffCode}/operationalGrouping",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"depot\": [\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1970-11-28\",\n      \"endDate\": \"1965-03-22\"\n    },\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"1960-11-04\",\n      \"endDate\": \"1979-08-09\"\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"2002-11-27\",\n      \"endDate\": \"2020-05-29\"\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1990-07-09\",\n      \"endDate\": \"1967-10-03\"\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2014-02-10\",\n      \"endDate\": \"1990-01-22\"\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2013-05-04\",\n      \"endDate\": \"1991-04-05\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"operationalGrouping"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) Identifier code for the staff member to update"
																}
															]
														},
														"description": "Batch add staff operational Grouping (depots, working groups, business units)"
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1970-11-28\",\n      \"endDate\": \"1965-03-22\"\n    },\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"1960-11-04\",\n      \"endDate\": \"1979-08-09\"\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"2002-11-27\",\n      \"endDate\": \"2020-05-29\"\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1990-07-09\",\n      \"endDate\": \"1967-10-03\"\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2014-02-10\",\n      \"endDate\": \"1990-01-22\"\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2013-05-04\",\n      \"endDate\": \"1991-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1970-11-28\",\n      \"endDate\": \"1965-03-22\"\n    },\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"1960-11-04\",\n      \"endDate\": \"1979-08-09\"\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"2002-11-27\",\n      \"endDate\": \"2020-05-29\"\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1990-07-09\",\n      \"endDate\": \"1967-10-03\"\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2014-02-10\",\n      \"endDate\": \"1990-01-22\"\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2013-05-04\",\n      \"endDate\": \"1991-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1970-11-28\",\n      \"endDate\": \"1965-03-22\"\n    },\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"1960-11-04\",\n      \"endDate\": \"1979-08-09\"\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"2002-11-27\",\n      \"endDate\": \"2020-05-29\"\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1990-07-09\",\n      \"endDate\": \"1967-10-03\"\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2014-02-10\",\n      \"endDate\": \"1990-01-22\"\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2013-05-04\",\n      \"endDate\": \"1991-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1970-11-28\",\n      \"endDate\": \"1965-03-22\"\n    },\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"1960-11-04\",\n      \"endDate\": \"1979-08-09\"\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"2002-11-27\",\n      \"endDate\": \"2020-05-29\"\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1990-07-09\",\n      \"endDate\": \"1967-10-03\"\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2014-02-10\",\n      \"endDate\": \"1990-01-22\"\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2013-05-04\",\n      \"endDate\": \"1991-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"depot\": [\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1970-11-28\",\n      \"endDate\": \"1965-03-22\"\n    },\n    {\n      \"depotsCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"1960-11-04\",\n      \"endDate\": \"1979-08-09\"\n    }\n  ],\n  \"workingGroup\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"LINK\",\n      \"startDate\": \"2002-11-27\",\n      \"endDate\": \"2020-05-29\"\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"1990-07-09\",\n      \"endDate\": \"1967-10-03\"\n    }\n  ],\n  \"businessUnit\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2014-02-10\",\n      \"endDate\": \"1990-01-22\"\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"relationType\": \"TRANSFER\",\n      \"startDate\": \"2013-05-04\",\n      \"endDate\": \"1991-04-05\"\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?processingMode=ATOMIC",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "processingMode",
																			"value": "ATOMIC",
																			"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "/ext/v1/staff/:staffCode/operationalGrouping",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?qualificationType=DEPOT&relationType=TRANSFER&externalCode=string&startDate={{startDate}}&endDate={{endDate}}",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																":staffCode",
																"operationalGrouping"
															],
															"query": [
																{
																	"key": "qualificationType",
																	"value": "DEPOT",
																	"description": "(Required) Type of qualification to delete; must be one of DEPOT, WORKING_GROUP, or BUSINESS_UNIT."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "(Required) Type of relation between the staff member and the depot."
																},
																{
																	"key": "externalCode",
																	"value": "string",
																	"description": "(Required) Code of the specific qualification to be deleted"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date of the qualification validity period to be deleted"
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "Optional end date of the qualification validity period to be deleted"
																}
															],
															"variable": [
																{
																	"key": "staffCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Response with the status of the operation, including summary and details of errors or warnings",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?qualificationType=DEPOT&relationType=TRANSFER&externalCode=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "qualificationType",
																			"value": "DEPOT",
																			"description": "(Required) Type of qualification to delete; must be one of DEPOT, WORKING_GROUP, or BUSINESS_UNIT."
																		},
																		{
																			"key": "relationType",
																			"value": "TRANSFER",
																			"description": "(Required) Type of relation between the staff member and the depot."
																		},
																		{
																			"key": "externalCode",
																			"value": "string",
																			"description": "(Required) Code of the specific qualification to be deleted"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the qualification validity period to be deleted"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "Optional end date of the qualification validity period to be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?qualificationType=DEPOT&relationType=TRANSFER&externalCode=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "qualificationType",
																			"value": "DEPOT",
																			"description": "(Required) Type of qualification to delete; must be one of DEPOT, WORKING_GROUP, or BUSINESS_UNIT."
																		},
																		{
																			"key": "relationType",
																			"value": "TRANSFER",
																			"description": "(Required) Type of relation between the staff member and the depot."
																		},
																		{
																			"key": "externalCode",
																			"value": "string",
																			"description": "(Required) Code of the specific qualification to be deleted"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the qualification validity period to be deleted"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "Optional end date of the qualification validity period to be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?qualificationType=DEPOT&relationType=TRANSFER&externalCode=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "qualificationType",
																			"value": "DEPOT",
																			"description": "(Required) Type of qualification to delete; must be one of DEPOT, WORKING_GROUP, or BUSINESS_UNIT."
																		},
																		{
																			"key": "relationType",
																			"value": "TRANSFER",
																			"description": "(Required) Type of relation between the staff member and the depot."
																		},
																		{
																			"key": "externalCode",
																			"value": "string",
																			"description": "(Required) Code of the specific qualification to be deleted"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the qualification validity period to be deleted"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "Optional end date of the qualification validity period to be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?qualificationType=DEPOT&relationType=TRANSFER&externalCode=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "qualificationType",
																			"value": "DEPOT",
																			"description": "(Required) Type of qualification to delete; must be one of DEPOT, WORKING_GROUP, or BUSINESS_UNIT."
																		},
																		{
																			"key": "relationType",
																			"value": "TRANSFER",
																			"description": "(Required) Type of relation between the staff member and the depot."
																		},
																		{
																			"key": "externalCode",
																			"value": "string",
																			"description": "(Required) Code of the specific qualification to be deleted"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the qualification validity period to be deleted"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "Optional end date of the qualification validity period to be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict due to duplicate or immutable field mismatch",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/staff/:staffCode/operationalGrouping?qualificationType=DEPOT&relationType=TRANSFER&externalCode=string&startDate={{startDate}}&endDate={{endDate}}",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"staff",
																		":staffCode",
																		"operationalGrouping"
																	],
																	"query": [
																		{
																			"key": "qualificationType",
																			"value": "DEPOT",
																			"description": "(Required) Type of qualification to delete; must be one of DEPOT, WORKING_GROUP, or BUSINESS_UNIT."
																		},
																		{
																			"key": "relationType",
																			"value": "TRANSFER",
																			"description": "(Required) Type of relation between the staff member and the depot."
																		},
																		{
																			"key": "externalCode",
																			"value": "string",
																			"description": "(Required) Code of the specific qualification to be deleted"
																		},
																		{
																			"key": "startDate",
																			"value": "{{startDate}}",
																			"description": "(Required) Start date of the qualification validity period to be deleted"
																		},
																		{
																			"key": "endDate",
																			"value": "{{endDate}}",
																			"description": "Optional end date of the qualification validity period to be deleted"
																		}
																	],
																	"variable": [
																		{
																			"key": "staffCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "inactivity",
									"item": [
										{
											"name": "/ext/v1/staff/inactivity",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"inactivity"
													],
													"query": [
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Filters inactivity periods which start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Filters inactivity periods which end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Inactivity information of of staff.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"staffCode\": \"STF01\",\n      \"startDate\": \"2025-08-15\",\n      \"endDate\": \"2025-08-20\"\n    },\n    {\n      \"staffCode\": \"STF01\",\n      \"startDate\": \"2025-08-15\",\n      \"endDate\": \"2025-08-20\"\n    }\n  ],\n  \"totalRecords\": 4967,\n  \"currentPage\": 166,\n  \"totalPages\": 2790\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/inactivity?staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"inactivity"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters inactivity periods which start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters inactivity periods which end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "assignment",
									"item": [
										{
											"name": "/ext/v1/staff/assignment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&assignmentType=string&depotCodes=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"assignment"
													],
													"query": [
														{
															"key": "assignmentType",
															"value": "string",
															"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
														},
														{
															"key": "assignmentType",
															"value": "string",
															"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "assignmentScenarioCode",
															"value": "string",
															"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Filters for assignments that start on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Filters for assignments that end on or before this date."
														},
														{
															"key": "pageSize",
															"value": "20",
															"description": "Maximum number of records to return in the response."
														},
														{
															"key": "page",
															"value": "0",
															"description": "Number of page of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Summary of staff assignments.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"staffCode\": \"string\",\n      \"assignments\": [\n        {\n          \"assignmentType\": \"TASK\",\n          \"day\": \"1978-03-15\",\n          \"logicalService\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1961-03-09T13:55:32.220Z\",\n          \"endHour\": \"1961-08-03T14:08:45.435Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"assignmentType\": \"INCIDENCE\",\n          \"day\": \"2007-02-04\",\n          \"logicalService\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1957-09-09T18:40:10.947Z\",\n          \"endHour\": \"1979-05-22T16:04:26.770Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ]\n    },\n    {\n      \"staffCode\": \"string\",\n      \"assignments\": [\n        {\n          \"assignmentType\": \"REMOVE_ABSENCE\",\n          \"day\": \"1960-07-23\",\n          \"logicalService\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1963-07-04T23:04:30.456Z\",\n          \"endHour\": \"1987-12-12T20:03:00.602Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"assignmentType\": \"ABSENCE\",\n          \"day\": \"1986-04-11\",\n          \"logicalService\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1968-03-17T17:33:56.597Z\",\n          \"endHour\": \"1970-06-16T13:20:26.619Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 6006,\n  \"currentPage\": 962,\n  \"totalPages\": 7825\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "/ext/v1/staff/assignment",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/assignment?assignmentType=string&assignmentType=string&depotCodes=string&depotCodes=string&assignmentScenarioCode=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"assignment"
															],
															"query": [
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "assignmentType",
																	"value": "string",
																	"description": "Assignment type; Enum: TASK, DAY_OFF, STAND_BY, ABSENCE, UNASSIGNED, INCIDENCE, REMOVE_ABSENCE"
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only assignments that are related to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only assignments that are related to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"_postman_previewlanguage": "",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "customProperty",
									"item": [
										{
											"name": "/ext/v1/staff/customProperty",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&depotCodes=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"customProperty"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Staff dynamic property details.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"customProperties\": [\n        {\n          \"name\": \"string\",\n          \"values\": [\n            {\n              \"value\": \"string\",\n              \"startDate\": \"1985-07-11\",\n              \"endDate\": \"1981-08-01\"\n            },\n            {\n              \"value\": \"string\",\n              \"startDate\": \"1949-09-17\",\n              \"endDate\": \"1986-05-09\"\n            }\n          ],\n          \"type\": {\n            \"name\": \"string\",\n            \"pattern\": \"string\"\n          }\n        },\n        {\n          \"name\": \"string\",\n          \"values\": [\n            {\n              \"value\": \"string\",\n              \"startDate\": \"2012-09-11\",\n              \"endDate\": \"2024-09-16\"\n            },\n            {\n              \"value\": \"string\",\n              \"startDate\": \"2011-10-02\",\n              \"endDate\": \"2000-03-19\"\n            }\n          ],\n          \"type\": {\n            \"name\": \"string\",\n            \"pattern\": \"string\"\n          }\n        }\n      ],\n      \"staffCode\": \"string\",\n      \"code\": 6811\n    },\n    {\n      \"customProperties\": [\n        {\n          \"name\": \"string\",\n          \"values\": [\n            {\n              \"value\": \"string\",\n              \"startDate\": \"1975-02-20\",\n              \"endDate\": \"1995-11-25\"\n            },\n            {\n              \"value\": \"string\",\n              \"startDate\": \"1988-10-31\",\n              \"endDate\": \"1979-08-11\"\n            }\n          ],\n          \"type\": {\n            \"name\": \"string\",\n            \"pattern\": \"string\"\n          }\n        },\n        {\n          \"name\": \"string\",\n          \"values\": [\n            {\n              \"value\": \"string\",\n              \"startDate\": \"1957-08-13\",\n              \"endDate\": \"1948-05-29\"\n            },\n            {\n              \"value\": \"string\",\n              \"startDate\": \"1976-04-19\",\n              \"endDate\": \"1986-02-20\"\n            }\n          ],\n          \"type\": {\n            \"name\": \"string\",\n            \"pattern\": \"string\"\n          }\n        }\n      ],\n      \"staffCode\": \"string\",\n      \"code\": \"string\"\n    }\n  ],\n  \"totalRecords\": 8535,\n  \"currentPage\": 7559,\n  \"totalPages\": 1181\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
																},
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for employees whose contract start date is on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for employees whose contract end date is on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/ext/v1/staff/customProperty",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1991-02-24\",\n            \"endDate\": \"2014-06-06\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1980-12-11\",\n            \"endDate\": \"1976-07-30\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1960-07-20\",\n            \"endDate\": \"1972-11-17\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2019-05-25\",\n            \"endDate\": \"2016-09-11\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": 2534.593670380776\n  },\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1976-02-24\",\n            \"endDate\": \"2006-12-27\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2005-07-11\",\n            \"endDate\": \"2012-08-08\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1970-05-18\",\n            \"endDate\": \"1982-10-10\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1968-04-30\",\n            \"endDate\": \"1957-06-14\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff/customProperty?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff",
														"customProperty"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1991-02-24\",\n            \"endDate\": \"2014-06-06\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1980-12-11\",\n            \"endDate\": \"1976-07-30\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1960-07-20\",\n            \"endDate\": \"1972-11-17\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2019-05-25\",\n            \"endDate\": \"2016-09-11\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": 2534.593670380776\n  },\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1976-02-24\",\n            \"endDate\": \"2006-12-27\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2005-07-11\",\n            \"endDate\": \"2012-08-08\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1970-05-18\",\n            \"endDate\": \"1982-10-10\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1968-04-30\",\n            \"endDate\": \"1957-06-14\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1991-02-24\",\n            \"endDate\": \"2014-06-06\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1980-12-11\",\n            \"endDate\": \"1976-07-30\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1960-07-20\",\n            \"endDate\": \"1972-11-17\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2019-05-25\",\n            \"endDate\": \"2016-09-11\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": 2534.593670380776\n  },\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1976-02-24\",\n            \"endDate\": \"2006-12-27\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2005-07-11\",\n            \"endDate\": \"2012-08-08\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1970-05-18\",\n            \"endDate\": \"1982-10-10\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1968-04-30\",\n            \"endDate\": \"1957-06-14\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1991-02-24\",\n            \"endDate\": \"2014-06-06\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1980-12-11\",\n            \"endDate\": \"1976-07-30\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1960-07-20\",\n            \"endDate\": \"1972-11-17\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2019-05-25\",\n            \"endDate\": \"2016-09-11\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": 2534.593670380776\n  },\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1976-02-24\",\n            \"endDate\": \"2006-12-27\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2005-07-11\",\n            \"endDate\": \"2012-08-08\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1970-05-18\",\n            \"endDate\": \"1982-10-10\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1968-04-30\",\n            \"endDate\": \"1957-06-14\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1991-02-24\",\n            \"endDate\": \"2014-06-06\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1980-12-11\",\n            \"endDate\": \"1976-07-30\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1960-07-20\",\n            \"endDate\": \"1972-11-17\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2019-05-25\",\n            \"endDate\": \"2016-09-11\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": 2534.593670380776\n  },\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1976-02-24\",\n            \"endDate\": \"2006-12-27\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2005-07-11\",\n            \"endDate\": \"2012-08-08\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1970-05-18\",\n            \"endDate\": \"1982-10-10\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1968-04-30\",\n            \"endDate\": \"1957-06-14\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict due to duplicate or immutable field mismatch",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1991-02-24\",\n            \"endDate\": \"2014-06-06\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1980-12-11\",\n            \"endDate\": \"1976-07-30\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1960-07-20\",\n            \"endDate\": \"1972-11-17\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2019-05-25\",\n            \"endDate\": \"2016-09-11\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": 2534.593670380776\n  },\n  {\n    \"customProperties\": [\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1976-02-24\",\n            \"endDate\": \"2006-12-27\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"2005-07-11\",\n            \"endDate\": \"2012-08-08\"\n          }\n        ]\n      },\n      {\n        \"customPropertyName\": \"string\",\n        \"values\": [\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1970-05-18\",\n            \"endDate\": \"1982-10-10\"\n          },\n          {\n            \"value\": \"string\",\n            \"startDate\": \"1968-04-30\",\n            \"endDate\": \"1957-06-14\"\n          }\n        ]\n      }\n    ],\n    \"staffCode\": \"string\",\n    \"customPropertyName\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/staff/customProperty?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"staff",
																"customProperty"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/staff",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&depotCodes=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&staffCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"staff"
											],
											"query": [
												{
													"key": "depotCodes",
													"value": "string",
													"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
												},
												{
													"key": "depotCodes",
													"value": "string",
													"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
												},
												{
													"key": "businessUnitCodes",
													"value": "string",
													"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
												},
												{
													"key": "businessUnitCodes",
													"value": "string",
													"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
												},
												{
													"key": "workingGroupCodes",
													"value": "string",
													"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
												},
												{
													"key": "workingGroupCodes",
													"value": "string",
													"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
												},
												{
													"key": "staffCodes",
													"value": "string",
													"description": "Identifiers of staff to filter for."
												},
												{
													"key": "staffCodes",
													"value": "string",
													"description": "Identifiers of staff to filter for."
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "Filters for employees whose contract start date is on or after this date."
												},
												{
													"key": "endDate",
													"value": "{{endDate}}",
													"description": "Filters for employees whose contract end date is on or before this date."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										}
									},
									"response": [
										{
											"name": "Staff basic information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"staffCode\": \"string\",\n      \"active\": false,\n      \"email\": \"string\",\n      \"name\": \"string\",\n      \"surname\": \"string\",\n      \"phone\": \"string\",\n      \"address\": \"string\",\n      \"language\": \"string\",\n      \"contractKindName\": \"string\"\n    },\n    {\n      \"staffCode\": \"string\",\n      \"active\": false,\n      \"email\": \"string\",\n      \"name\": \"string\",\n      \"surname\": \"string\",\n      \"phone\": \"string\",\n      \"address\": \"string\",\n      \"language\": \"string\",\n      \"contractKindName\": \"string\"\n    }\n  ],\n  \"totalRecords\": 7214,\n  \"currentPage\": 6635,\n  \"totalPages\": 6728\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&staffCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only staff who are either linked to or transferred to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only staff who are linked or trasfered to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only staff who are linked or trasfered to any of the specified working groups will be included in the results."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "Filters for employees whose contract start date is on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "Filters for employees whose contract end date is on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/staff",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1962-07-02\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  },\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1964-12-25\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/staff?processingMode=ATOMIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"staff"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												}
											]
										},
										"description": "Allows bulk creation of one or more staff member."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1962-07-02\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  },\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1964-12-25\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1962-07-02\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  },\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1964-12-25\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1962-07-02\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  },\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1964-12-25\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1962-07-02\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  },\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1964-12-25\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1962-07-02\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  },\n  {\n    \"staffCode\": \"string\",\n    \"name\": \"string\",\n    \"surname\": \"string\",\n    \"email\": \"string\",\n    \"username\": \"string\",\n    \"depotCode\": \"string\",\n    \"linkStartDate\": \"1964-12-25\",\n    \"businessUnitCode\": \"string\",\n    \"workingGroupCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/staff?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"staff"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "standBy",
							"item": [
								{
									"name": "{standByCode}",
									"item": [
										{
											"name": "/ext/v1/standBy/:standByCode",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy",
														":standByCode"
													],
													"variable": [
														{
															"key": "standByCode",
															"value": "string,string",
															"description": "(Required) Identifiers of standBys to filter for."
														}
													]
												}
											},
											"response": [
												{
													"name": "Full details of the requested task.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"date\": \"2022-05-30\",\n  \"hourly\": false,\n  \"startPlace\": \"string\",\n  \"endPlace\": \"string\",\n  \"shiftName\": \"string\"\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standBy/:standByCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standBy",
																":standByCode"
															],
															"variable": [
																{
																	"key": "standByCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/standBy",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"standBy"
											],
											"query": [
												{
													"key": "standByCodes",
													"value": "string",
													"description": "Identifiers of standBys to filter for."
												},
												{
													"key": "standByCodes",
													"value": "string",
													"description": "Identifiers of standBys to filter for."
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Start date of the period to get the info."
												},
												{
													"key": "endDate",
													"value": "{{endDate}}",
													"description": "(Required) End date of the period to get the info."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "(Required) Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										}
									},
									"response": [
										{
											"name": "StandBy information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"code\": \"string\",\n      \"date\": \"1954-05-30\",\n      \"hourly\": true,\n      \"startPlace\": \"string\",\n      \"endPlace\": \"string\",\n      \"shiftName\": \"string\"\n    },\n    {\n      \"code\": \"string\",\n      \"date\": \"1995-01-11\",\n      \"hourly\": true,\n      \"startPlace\": \"string\",\n      \"endPlace\": \"string\",\n      \"shiftName\": \"string\"\n    }\n  ],\n  \"totalRecords\": 5323,\n  \"currentPage\": 9106,\n  \"totalPages\": 9000\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standBy?standByCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standBy"
													],
													"query": [
														{
															"key": "standByCodes",
															"value": "string",
															"description": "Identifiers of standBys to filter for."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "(Required) Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "absence",
							"item": [
								{
									"name": "{absenceCode}",
									"item": [
										{
											"name": "/ext/v1/absence/{absenceCode}",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence",
														":absenceCode"
													],
													"variable": [
														{
															"key": "absenceCode",
															"value": "string",
															"description": "(Required) Identifier of absences to filter for."
														}
													]
												},
												"description": "/ext/v1/absence/{absenceCode}"
											},
											"response": [
												{
													"name": "Full details of the requested absence.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"startHour\": \"2025-07-28T08:00:00\",\n  \"endHour\": \"2025-07-28T12:00:00\",\n  \"date\": \"2025-07-28\",\n  \"type\": \"HOL\",\n  \"staffCode\": \"STF102\"\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/:absenceCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																":absenceCode"
															],
															"variable": [
																{
																	"key": "absenceCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "/ext/v1/absence/delete",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence/delete?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence",
														"delete"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												},
												"description": "Allows bulk delet of one or more absences."
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/delete?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/delete?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/delete?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/delete?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict due to duplicate or immutable field mismatch",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absence/delete?processingMode=ATOMIC",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absence",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/absence",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/absence?type=string&type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"absence"
											],
											"query": [
												{
													"key": "type",
													"value": "string",
													"description": "Absence types to filter for"
												},
												{
													"key": "type",
													"value": "string",
													"description": "Absence types to filter for"
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Start date of the period to get the absences."
												},
												{
													"key": "endDate",
													"value": "{{endDate}}",
													"description": "(Required) End date of the period to get the absences."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										},
										"description": "get absences"
									},
									"response": [
										{
											"name": "Absence information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"startHour\": \"2025-07-28T08:00:00\",\n      \"endHour\": \"2025-07-28T12:00:00\",\n      \"date\": \"2025-07-28\",\n      \"type\": \"HOL\",\n      \"staffCode\": \"STF102\"\n    },\n    {\n      \"startHour\": \"2025-07-28T08:00:00\",\n      \"endHour\": \"2025-07-28T12:00:00\",\n      \"date\": \"2025-07-28\",\n      \"type\": \"HOL\",\n      \"staffCode\": \"STF102\"\n    }\n  ],\n  \"totalRecords\": 1062,\n  \"currentPage\": 8550,\n  \"totalPages\": 9585\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?type=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "type",
															"value": "string",
															"description": "Absence types to filter for"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the absences."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the absences."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/absence",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/absence?processingMode=ATOMIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"absence"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												}
											]
										},
										"description": "Allows bulk creation of one or more absences."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  },\n  {\n    \"startHour\": \"2025-07-28T08:00:00\",\n    \"endHour\": \"2025-07-28T12:00:00\",\n    \"date\": \"2025-07-28\",\n    \"type\": \"HOL\",\n    \"staffCode\": \"STF102\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absence?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absence"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "place",
							"item": [
								{
									"name": "{placeCode}",
									"item": [
										{
											"name": "/ext/v1/place/{placeCode}",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place",
														":placeCode"
													],
													"variable": [
														{
															"key": "placeCode",
															"value": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieve individual place details by code"
											},
											"response": [
												{
													"name": "Full details of the requested task.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"shortName\": \"string\",\n  \"type\": \"COMMERCIAL\",\n  \"placeCode\": \"string\",\n  \"location\": {\n    \"longitude\": 4504.197350473518,\n    \"latitude\": 9232.08786574562\n  },\n  \"status\": \"ACTIVE\",\n  \"commercialName\": \"string\",\n  \"longName\": \"string\",\n  \"externalCode\": \"string\"\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/place/:placeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"place",
																":placeCode"
															],
															"variable": [
																{
																	"key": "placeCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/place",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"place"
											],
											"query": [
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Only resources from this date onwards will be included in the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection."
												}
											]
										},
										"description": "Retrieves a paginated list of places, with an option to filter by start date."
									},
									"response": [
										{
											"name": "Station basic information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"shortName\": \"string\",\n      \"type\": \"OPERATIONAL\",\n      \"placeCode\": \"string\",\n      \"location\": {\n        \"longitude\": 8124.255958536022,\n        \"latitude\": 5654.66270773006\n      },\n      \"status\": \"ACTIVE\",\n      \"commercialName\": \"string\",\n      \"longName\": \"string\",\n      \"externalCode\": \"string\"\n    },\n    {\n      \"shortName\": \"string\",\n      \"type\": \"OPERATIONAL\",\n      \"placeCode\": \"string\",\n      \"location\": {\n        \"longitude\": 6062.93549604892,\n        \"latitude\": 5138.410353105205\n      },\n      \"status\": \"ACTIVE\",\n      \"commercialName\": \"string\",\n      \"longName\": \"string\",\n      \"externalCode\": \"string\"\n    }\n  ],\n  \"totalRecords\": 2475,\n  \"currentPage\": 142,\n  \"totalPages\": 4836\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/place",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"shortName\": \"string\",\n    \"type\": \"COMMERCIAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 7307.7293819026745,\n      \"latitude\": 5245.889800217787\n    },\n    \"status\": \"ACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  },\n  {\n    \"shortName\": \"string\",\n    \"type\": \"OPERATIONAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 2417.3215076297392,\n      \"latitude\": 5596.286508402084\n    },\n    \"status\": \"INACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/place?processingMode=ATOMIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"place"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												}
											]
										},
										"description": "Allows bulk creation or update of one or more places."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shortName\": \"string\",\n    \"type\": \"COMMERCIAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 7307.7293819026745,\n      \"latitude\": 5245.889800217787\n    },\n    \"status\": \"ACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  },\n  {\n    \"shortName\": \"string\",\n    \"type\": \"OPERATIONAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 2417.3215076297392,\n      \"latitude\": 5596.286508402084\n    },\n    \"status\": \"INACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shortName\": \"string\",\n    \"type\": \"COMMERCIAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 7307.7293819026745,\n      \"latitude\": 5245.889800217787\n    },\n    \"status\": \"ACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  },\n  {\n    \"shortName\": \"string\",\n    \"type\": \"OPERATIONAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 2417.3215076297392,\n      \"latitude\": 5596.286508402084\n    },\n    \"status\": \"INACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shortName\": \"string\",\n    \"type\": \"COMMERCIAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 7307.7293819026745,\n      \"latitude\": 5245.889800217787\n    },\n    \"status\": \"ACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  },\n  {\n    \"shortName\": \"string\",\n    \"type\": \"OPERATIONAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 2417.3215076297392,\n      \"latitude\": 5596.286508402084\n    },\n    \"status\": \"INACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shortName\": \"string\",\n    \"type\": \"COMMERCIAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 7307.7293819026745,\n      \"latitude\": 5245.889800217787\n    },\n    \"status\": \"ACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  },\n  {\n    \"shortName\": \"string\",\n    \"type\": \"OPERATIONAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 2417.3215076297392,\n      \"latitude\": 5596.286508402084\n    },\n    \"status\": \"INACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shortName\": \"string\",\n    \"type\": \"COMMERCIAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 7307.7293819026745,\n      \"latitude\": 5245.889800217787\n    },\n    \"status\": \"ACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  },\n  {\n    \"shortName\": \"string\",\n    \"type\": \"OPERATIONAL\",\n    \"placeCode\": \"string\",\n    \"location\": {\n      \"longitude\": 2417.3215076297392,\n      \"latitude\": 5596.286508402084\n    },\n    \"status\": \"INACTIVE\",\n    \"commercialName\": \"string\",\n    \"longName\": \"string\",\n    \"externalCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/place?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"place"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "route",
							"item": [
								{
									"name": "{routeCode}",
									"item": [
										{
											"name": "/ext/v1/route/{routeCode}",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route",
														":routeCode"
													],
													"variable": [
														{
															"key": "routeCode",
															"value": "string",
															"description": "(Required) Identifier of routes to filter for."
														}
													]
												},
												"description": "Retrieves a specific route identified by its code, including its name, status, stops, and associated vehicle types"
											},
											"response": [
												{
													"name": "Full details of the requested task.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"routeCode\": \"R01\",\n  \"routeShortName\": \"Route-short\",\n  \"vehicleTypeCode\": [\n    \"VT01\"\n  ],\n  \"minimumSeats\": 9950,\n  \"routeStatus\": \"ACTIVE\",\n  \"updateTime\": \"2019-08-24T14:15:22Z\",\n  \"originPlaceCode\": \"PLACE02\",\n  \"places\": [\n    {\n      \"order\": 8772,\n      \"placeCode\": \"PLACE01\"\n    },\n    {\n      \"order\": 1255,\n      \"placeCode\": \"PLACE01\"\n    }\n  ],\n  \"destinationPlaceCode\": \"PLACE01\",\n  \"routeLongName\": \"Route long name\",\n  \"routeDescription\": \"Route via 01\",\n  \"depotCode\": [\n    \"DEP01\"\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/route/:routeCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"route",
																":routeCode"
															],
															"variable": [
																{
																	"key": "routeCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/route",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"route"
											],
											"query": [
												{
													"key": "routeCodes",
													"value": "string",
													"description": "List of route codes to filter by."
												},
												{
													"key": "routeCodes",
													"value": "string",
													"description": "List of route codes to filter by."
												},
												{
													"key": "limit",
													"value": "7824",
													"description": "Maximum number of records to return (page size)."
												},
												{
													"key": "offset",
													"value": "7824",
													"description": "Number of records to skip from the beginning of the collection"
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Only resources from this date onwards will be included in the response."
												}
											]
										},
										"description": "Retrieves a paginated list of routes, including origin, destination, codes, and other route details, filtered by provided criteria."
									},
									"response": [
										{
											"name": "Summary of routes.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"routeCode\": \"R01\",\n      \"routeShortName\": \"Route-short\",\n      \"vehicleTypeCode\": [\n        \"VT01\"\n      ],\n      \"minimumSeats\": 2830,\n      \"routeStatus\": \"ACTIVE\",\n      \"updateTime\": \"2019-08-24T14:15:22Z\",\n      \"originPlaceCode\": \"PLACE02\",\n      \"places\": [\n        {\n          \"order\": 8269,\n          \"placeCode\": \"PLACE01\"\n        },\n        {\n          \"order\": 8601,\n          \"placeCode\": \"PLACE01\"\n        }\n      ],\n      \"destinationPlaceCode\": \"PLACE01\",\n      \"routeLongName\": \"Route long name\",\n      \"routeDescription\": \"Route via 01\",\n      \"depotCode\": [\n        \"DEP01\"\n      ]\n    },\n    {\n      \"routeCode\": \"R01\",\n      \"routeShortName\": \"Route-short\",\n      \"vehicleTypeCode\": [\n        \"VT01\"\n      ],\n      \"minimumSeats\": 8193,\n      \"routeStatus\": \"ACTIVE\",\n      \"updateTime\": \"2019-08-24T14:15:22Z\",\n      \"originPlaceCode\": \"PLACE02\",\n      \"places\": [\n        {\n          \"order\": 2611,\n          \"placeCode\": \"PLACE01\"\n        },\n        {\n          \"order\": 2908,\n          \"placeCode\": \"PLACE01\"\n        }\n      ],\n      \"destinationPlaceCode\": \"PLACE01\",\n      \"routeLongName\": \"Route long name\",\n      \"routeDescription\": \"Route via 01\",\n      \"depotCode\": [\n        \"DEP01\"\n      ]\n    }\n  ],\n  \"totalRecords\": 7270,\n  \"currentPage\": 3162,\n  \"totalPages\": 199\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/route?routeCodes=string&limit=7824&offset=7824&startDate={{startDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"route"
													],
													"query": [
														{
															"key": "routeCodes",
															"value": "string",
															"description": "List of route codes to filter by."
														},
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "section",
							"item": [
								{
									"name": "{sectionCode}",
									"item": [
										{
											"name": "/ext/v1/section/{sectionCode}",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section",
														":sectionCode"
													],
													"variable": [
														{
															"key": "sectionCode",
															"value": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieves a specific section identified by its code, including origin and destination, section length, status, and related metadata."
											},
											"response": [
												{
													"name": "Full details of the requested task.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"sectionCode\": \"sec01\",\n  \"originPlaceCode\": \"PLACE02\",\n  \"destinationPlaceCode\": \"PLACE01\",\n  \"sectionTime\": [\n    {\n      \"weekday\": \"MONDAY\",\n      \"slots\": [\n        {\n          \"slotCode\": \"SLOT1\",\n          \"startTime\": \"HH:mm:ss\",\n          \"endTime\": \"HH:mm:ss\",\n          \"travelTime\": \"DDThhmmss\"\n        },\n        {\n          \"slotCode\": \"SLOT1\",\n          \"startTime\": \"HH:mm:ss\",\n          \"endTime\": \"HH:mm:ss\",\n          \"travelTime\": \"DDThhmmss\"\n        }\n      ]\n    },\n    {\n      \"weekday\": \"MONDAY\",\n      \"slots\": [\n        {\n          \"slotCode\": \"SLOT1\",\n          \"startTime\": \"HH:mm:ss\",\n          \"endTime\": \"HH:mm:ss\",\n          \"travelTime\": \"DDThhmmss\"\n        },\n        {\n          \"slotCode\": \"SLOT1\",\n          \"startTime\": \"HH:mm:ss\",\n          \"endTime\": \"HH:mm:ss\",\n          \"travelTime\": \"DDThhmmss\"\n        }\n      ]\n    }\n  ],\n  \"sectionDistance\": 3934.658764126573,\n  \"sectionShortName\": \"S11\",\n  \"updateTime\": \"2024-07-02T14:30:00\",\n  \"status\": \"ACTIVE\",\n  \"sectionDescription\": \"Description of the route\",\n  \"viaCode\": \"Via01\",\n  \"serviceClassCode\": \"class01\",\n  \"tolls\": [\n    {\n      \"order\": 2808,\n      \"tollCode\": \"TOLL01\"\n    },\n    {\n      \"order\": 1255,\n      \"tollCode\": \"TOLL01\"\n    }\n  ],\n  \"paidDistance\": 2971\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/section/:sectionCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"section",
																":sectionCode"
															],
															"variable": [
																{
																	"key": "sectionCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/section",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&originPlaceCode=string&destinationPlaceCode=string&destinationPlaceCode=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"section"
											],
											"query": [
												{
													"key": "limit",
													"value": "7824",
													"description": "Maximum number of records to return (page size)."
												},
												{
													"key": "offset",
													"value": "7824",
													"description": "Number of records to skip from the beginning of the collection"
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Only resources from this date onwards will be included in the response."
												},
												{
													"key": "originPlaceCode",
													"value": "string",
													"description": "Origin place codes"
												},
												{
													"key": "originPlaceCode",
													"value": "string",
													"description": "Origin place codes"
												},
												{
													"key": "destinationPlaceCode",
													"value": "string",
													"description": "Destination place codes"
												},
												{
													"key": "destinationPlaceCode",
													"value": "string",
													"description": "Destination place codes"
												}
											]
										}
									},
									"response": [
										{
											"name": "Summary of staff assignments.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"sectionCode\": \"sec01\",\n      \"originPlaceCode\": \"PLACE02\",\n      \"destinationPlaceCode\": \"PLACE01\",\n      \"sectionTime\": [\n        {\n          \"weekday\": \"MONDAY\",\n          \"slots\": [\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            },\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            }\n          ]\n        },\n        {\n          \"weekday\": \"MONDAY\",\n          \"slots\": [\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            },\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            }\n          ]\n        }\n      ],\n      \"sectionDistance\": 4446.866157552716,\n      \"sectionShortName\": \"S11\",\n      \"updateTime\": \"2024-07-02T14:30:00\",\n      \"status\": \"ACTIVE\",\n      \"sectionDescription\": \"Description of the route\",\n      \"viaCode\": \"Via01\",\n      \"serviceClassCode\": \"class01\",\n      \"tolls\": [\n        {\n          \"order\": 5950,\n          \"tollCode\": \"TOLL01\"\n        },\n        {\n          \"order\": 5692,\n          \"tollCode\": \"TOLL01\"\n        }\n      ],\n      \"paidDistance\": 1618\n    },\n    {\n      \"sectionCode\": \"sec01\",\n      \"originPlaceCode\": \"PLACE02\",\n      \"destinationPlaceCode\": \"PLACE01\",\n      \"sectionTime\": [\n        {\n          \"weekday\": \"MONDAY\",\n          \"slots\": [\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            },\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            }\n          ]\n        },\n        {\n          \"weekday\": \"MONDAY\",\n          \"slots\": [\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            },\n            {\n              \"slotCode\": \"SLOT1\",\n              \"startTime\": \"HH:mm:ss\",\n              \"endTime\": \"HH:mm:ss\",\n              \"travelTime\": \"DDThhmmss\"\n            }\n          ]\n        }\n      ],\n      \"sectionDistance\": 5780.492699983583,\n      \"sectionShortName\": \"S11\",\n      \"updateTime\": \"2024-07-02T14:30:00\",\n      \"status\": \"ACTIVE\",\n      \"sectionDescription\": \"Description of the route\",\n      \"viaCode\": \"Via01\",\n      \"serviceClassCode\": \"class01\",\n      \"tolls\": [\n        {\n          \"order\": 2926,\n          \"tollCode\": \"TOLL01\"\n        },\n        {\n          \"order\": 1251,\n          \"tollCode\": \"TOLL01\"\n        }\n      ],\n      \"paidDistance\": 317\n    }\n  ],\n  \"totalRecords\": 95,\n  \"currentPage\": 1054,\n  \"totalPages\": 7893\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/section?limit=7824&offset=7824&startDate={{startDate}}&originPlaceCode=string&destinationPlaceCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"section"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "originPlaceCode",
															"value": "string",
															"description": "Origin place codes"
														},
														{
															"key": "destinationPlaceCode",
															"value": "string",
															"description": "Destination place codes"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "task",
							"item": [
								{
									"name": "{taskCode}",
									"item": [
										{
											"name": "/ext/v1/task/:taskCode",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task",
														":taskCode"
													],
													"variable": [
														{
															"key": "taskCode",
															"value": "string",
															"description": "(Required) Unique identifier of the task to retrieve."
														}
													]
												}
											},
											"response": [
												{
													"name": "Full details of the requested task.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"depotCode\": \"string\",\n  \"startDate\": \"2001-01-16\",\n  \"endDate\": \"2017-05-31\",\n  \"name\": \"string\",\n  \"startPlace\": \"string\",\n  \"endPlace\": \"string\",\n  \"origin\": \"string\",\n  \"type\": \"string\",\n  \"category\": \"DRIVING\",\n  \"startHour\": \"1956-12-01T03:10:48.870Z\",\n  \"endHour\": \"2024-11-01T21:36:38.170Z\",\n  \"drivingTime\": \"string\",\n  \"paidTime\": \"string\",\n  \"breakTime\": \"string\",\n  \"overTime\": \"string\",\n  \"amplitude\": \"string\",\n  \"workingTime\": \"string\",\n  \"nightTime\": \"string\",\n  \"availabilityTime\": \"string\",\n  \"overtime\": \"string\",\n  \"workingGroupCode\": \"string\",\n  \"businessUnitCode\": \"string\",\n  \"lineName\": \"string\",\n  \"serviceName\": \"string\"\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/:taskCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																":taskCode"
															],
															"variable": [
																{
																	"key": "taskCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "event",
									"item": [
										{
											"name": "/ext/v1/task/event",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&taskCodes=string&tripCode=string&pageSize=20&page=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task",
														"event"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
														},
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
														},
														{
															"key": "pageSize",
															"value": "20",
															"description": "Maximum number of records to return in the response."
														},
														{
															"key": "page",
															"value": "0",
															"description": "Number of page of the collection"
														}
													]
												},
												"description": "Retrieves all events associated with the specified tasks provided in the request input"
											},
											"response": [
												{
													"name": "Task event information.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"taskCode\": \"TASK123\",\n      \"events\": [\n        {\n          \"eventType\": \"expedition\",\n          \"startHour\": \"08:00\",\n          \"endHour\": \"10:00\",\n          \"startPlace\": \"Central Station\",\n          \"endPlace\": \"Downtown Hub\",\n          \"tripCode\": \"TRIP123\",\n          \"sections\": [\n            {\n              \"sectionCode\": \"SEC001\",\n              \"order\": 1,\n              \"position\": 1\n            },\n            {\n              \"sectionCode\": \"SEC002\",\n              \"order\": 2,\n              \"position\": 2\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"taskCode\": \"TASK123\",\n      \"events\": [\n        {\n          \"eventType\": \"expedition\",\n          \"startHour\": \"08:00\",\n          \"endHour\": \"10:00\",\n          \"startPlace\": \"Central Station\",\n          \"endPlace\": \"Downtown Hub\",\n          \"tripCode\": \"TRIP123\",\n          \"sections\": [\n            {\n              \"sectionCode\": \"SEC001\",\n              \"order\": 1,\n              \"position\": 1\n            },\n            {\n              \"sectionCode\": \"SEC002\",\n              \"order\": 2,\n              \"position\": 2\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 1586,\n  \"currentPage\": 8380,\n  \"totalPages\": 7145\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/event?taskCodes=string&tripCode=string&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"event"
															],
															"query": [
																{
																	"key": "taskCodes",
																	"value": "string",
																	"description": "Identifiers of tasks to filter events for. Optional if 'tripCode' is provided.\r\nAt least one of 'taskCodes' or 'tripCode' must be specified"
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter events associated with expeditions. Optional if 'taskCodes' are provided."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "delete",
									"item": [
										{
											"name": "/ext/v1/task/delete",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"1976-11-25\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  },\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"2010-05-13\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task/delete?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task",
														"delete"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string",
															"description": "batch Id of the operation"
														}
													]
												}
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"1976-11-25\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  },\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"2010-05-13\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/delete?processingMode=ATOMIC&batchId=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																},
																{
																	"key": "batchId",
																	"value": "string",
																	"description": "batch Id of the operation"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"1976-11-25\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  },\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"2010-05-13\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/delete?processingMode=ATOMIC&batchId=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																},
																{
																	"key": "batchId",
																	"value": "string",
																	"description": "batch Id of the operation"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"1976-11-25\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  },\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"2010-05-13\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/delete?processingMode=ATOMIC&batchId=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																},
																{
																	"key": "batchId",
																	"value": "string",
																	"description": "batch Id of the operation"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"1976-11-25\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  },\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"2010-05-13\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/delete?processingMode=ATOMIC&batchId=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																},
																{
																	"key": "batchId",
																	"value": "string",
																	"description": "batch Id of the operation"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict due to duplicate or immutable field mismatch",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"1976-11-25\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  },\n  {\n    \"taskCode\": \"string\",\n    \"date\": \"2010-05-13\",\n    \"driverCode\": \"string\",\n    \"depotCode\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/task/delete?processingMode=ATOMIC&batchId=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"task",
																"delete"
															],
															"query": [
																{
																	"key": "processingMode",
																	"value": "ATOMIC",
																	"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
																},
																{
																	"key": "batchId",
																	"value": "string",
																	"description": "batch Id of the operation"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/task",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&taskCodes=string&depotCodes=string&depotCodes=string&businessUnitCodes=string&businessUnitCodes=string&workingGroupCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"task"
											],
											"query": [
												{
													"key": "taskCodes",
													"value": "string",
													"description": "Identifiers of tasks to filter for."
												},
												{
													"key": "taskCodes",
													"value": "string",
													"description": "Identifiers of tasks to filter for."
												},
												{
													"key": "depotCodes",
													"value": "string",
													"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
												},
												{
													"key": "depotCodes",
													"value": "string",
													"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
												},
												{
													"key": "businessUnitCodes",
													"value": "string",
													"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
												},
												{
													"key": "businessUnitCodes",
													"value": "string",
													"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
												},
												{
													"key": "workingGroupCodes",
													"value": "string",
													"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
												},
												{
													"key": "workingGroupCodes",
													"value": "string",
													"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Start date of the period to get the info."
												},
												{
													"key": "endDate",
													"value": "{{endDate}}",
													"description": "(Required) End date of the period to get the info."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										}
									},
									"response": [
										{
											"name": "Task information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"code\": \"string\",\n      \"depotCode\": \"string\",\n      \"startDate\": \"1950-08-31\",\n      \"endDate\": \"1956-01-19\",\n      \"name\": \"string\",\n      \"startPlace\": \"string\",\n      \"endPlace\": \"string\",\n      \"origin\": \"string\",\n      \"type\": \"string\",\n      \"category\": \"OPERATIONAL_INCIDENT\",\n      \"startHour\": \"2006-07-20T11:30:38.131Z\",\n      \"endHour\": \"1993-02-03T04:54:19.767Z\",\n      \"drivingTime\": \"string\",\n      \"paidTime\": \"string\",\n      \"breakTime\": \"string\",\n      \"overTime\": \"string\",\n      \"amplitude\": \"string\",\n      \"workingTime\": \"string\",\n      \"nightTime\": \"string\",\n      \"availabilityTime\": \"string\",\n      \"overtime\": \"string\",\n      \"workingGroupCode\": \"string\",\n      \"businessUnitCode\": \"string\",\n      \"lineName\": \"string\",\n      \"serviceName\": \"string\"\n    },\n    {\n      \"code\": \"string\",\n      \"depotCode\": \"string\",\n      \"startDate\": \"1981-09-20\",\n      \"endDate\": \"2024-06-02\",\n      \"name\": \"string\",\n      \"startPlace\": \"string\",\n      \"endPlace\": \"string\",\n      \"origin\": \"string\",\n      \"type\": \"string\",\n      \"category\": \"OPERATIONAL_INCIDENT\",\n      \"startHour\": \"1960-07-09T20:41:28.177Z\",\n      \"endHour\": \"2007-10-10T02:38:30.680Z\",\n      \"drivingTime\": \"string\",\n      \"paidTime\": \"string\",\n      \"breakTime\": \"string\",\n      \"overTime\": \"string\",\n      \"amplitude\": \"string\",\n      \"workingTime\": \"string\",\n      \"nightTime\": \"string\",\n      \"availabilityTime\": \"string\",\n      \"overtime\": \"string\",\n      \"workingGroupCode\": \"string\",\n      \"businessUnitCode\": \"string\",\n      \"lineName\": \"string\",\n      \"serviceName\": \"string\"\n    }\n  ],\n  \"totalRecords\": 3702,\n  \"currentPage\": 6418,\n  \"totalPages\": 1272\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?taskCodes=string&depotCodes=string&businessUnitCodes=string&workingGroupCodes=string&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "taskCodes",
															"value": "string",
															"description": "Identifiers of tasks to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only tasks that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "Identifiers of business units to filter for. Only tasks that are related to any of the specified business units will be included in the results."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for. Only tasks that are related to any of the specified working groups will be included in the results."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date of the period to get the info."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date of the period to get the info."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/task",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"task"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												},
												{
													"key": "batchId",
													"value": "string"
												}
											]
										}
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/task",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"task"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												},
												{
													"key": "batchId",
													"value": "string"
												}
											]
										}
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1995-07-29\",\n    \"endDate\": \"1970-10-09\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"DRIVING\",\n    \"startHour\": \"1949-10-11T16:53:04.350Z\",\n    \"endHour\": \"2006-09-28T01:09:30.164Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  },\n  {\n    \"code\": \"string\",\n    \"depotCode\": \"string\",\n    \"startDate\": \"1950-03-11\",\n    \"endDate\": \"1967-02-27\",\n    \"name\": \"string\",\n    \"startPlace\": \"string\",\n    \"endPlace\": \"string\",\n    \"origin\": \"string\",\n    \"type\": \"string\",\n    \"category\": \"OPERATIONAL_INCIDENT\",\n    \"startHour\": \"2006-03-08T22:54:14.377Z\",\n    \"endHour\": \"1999-09-10T14:51:14.869Z\",\n    \"drivingTime\": \"string\",\n    \"paidTime\": \"string\",\n    \"breakTime\": \"string\",\n    \"overTime\": \"string\",\n    \"amplitude\": \"string\",\n    \"workingTime\": \"string\",\n    \"nightTime\": \"string\",\n    \"availabilityTime\": \"string\",\n    \"overtime\": \"string\",\n    \"workingGroupCode\": \"string\",\n    \"businessUnitCode\": \"string\",\n    \"lineName\": \"string\",\n    \"serviceName\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/task?processingMode=ATOMIC&batchId=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"task"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														},
														{
															"key": "batchId",
															"value": "string"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "trip",
							"item": [
								{
									"name": "{tripCode}",
									"item": [
										{
											"name": "detail",
											"item": [
												{
													"name": "/ext/v1/trip/:tripCode/detail",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode",
																"detail"
															],
															"variable": [
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"tripCode\": \"TRIP123\",\n  \"originPlaceCode\": \"PLACE01\",\n  \"destinationPlaceCode\": \"PLACE99\",\n  \"startTime\": \"08:00\",\n  \"endTime\": \"10:00\",\n  \"weekDays\": \"0111110\",\n  \"distance\": 3950,\n  \"seats\": 3696,\n  \"routeCode\": \"Route123\",\n  \"regionsCode\": [\n    \"string\",\n    \"string\"\n  ],\n  \"itinerary\": [\n    {\n      \"originPlaceCode\": \"PLA01\",\n      \"order\": 7777,\n      \"stopTime\": \"PT1H15M30S\",\n      \"destinationPlaceCode\": \"PLA02\",\n      \"segmentCode\": \"SEG01\",\n      \"startTime\": \"06:20:00\",\n      \"endTime\": \"08:00:00\",\n      \"actions\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"originPlaceCode\": \"PLA01\",\n      \"order\": 138,\n      \"stopTime\": \"PT1H15M30S\",\n      \"destinationPlaceCode\": \"PLA02\",\n      \"segmentCode\": \"SEG01\",\n      \"startTime\": \"06:20:00\",\n      \"endTime\": \"08:00:00\",\n      \"actions\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"status\": \"EDITING\",\n  \"dateRange\": {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  \"serviceClassCode\": \"1\",\n  \"brandCode\": \"BrandCode\",\n  \"combination\": [\n    {\n      \"segmentCode\": \"string\",\n      \"originPlaceCode\": \"string\",\n      \"destinationPlaceCode\": \"string\",\n      \"sectionType\": \"FULL_TRIP\"\n    },\n    {\n      \"segmentCode\": \"string\",\n      \"originPlaceCode\": \"string\",\n      \"destinationPlaceCode\": \"string\",\n      \"sectionType\": \"PARTIAL_TRIP\"\n    }\n  ],\n  \"vehicleType\": [\n    \"BUS01\",\n    \"BUS02\"\n  ],\n  \"tripType\": \"string\"\n}"
														},
														{
															"name": "Accepted",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Request Timeout",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Request Timeout",
															"code": 408,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Too Many Requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Service Unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/trip/:tripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"trip",
																		":tripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "tripCode"
																		}
																	]
																}
															},
															"status": "Service Unavailable",
															"code": 503,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "/ext/v1/trip/:tripCode",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip",
														":tripCode"
													],
													"variable": [
														{
															"key": "tripCode",
															"value": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tripCode\": \"TRIP123\",\n  \"originPlaceCode\": \"PLACE01\",\n  \"destinationPlaceCode\": \"PLACE99\",\n  \"startTime\": \"08:00\",\n  \"endTime\": \"10:00\",\n  \"weekDays\": \"0111110\",\n  \"routeCode\": \"Route123\",\n  \"dateRange\": {\n    \"startDate\": \"2025-06-20\",\n    \"endDate\": \"2025-08-20\"\n  },\n  \"status\": \"DELETED\",\n  \"scheduledTrips\": 8448.984612594699\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/:tripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																":tripCode"
															],
															"variable": [
																{
																	"key": "tripCode"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "detail",
									"item": [
										{
											"name": "/ext/v1/trip/detail",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip",
														"detail"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"response": [
												{
													"name": "Trip detailed information.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"tripCode\": \"TRIP123\",\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"weekDays\": \"0111110\",\n      \"distance\": 5762,\n      \"seats\": 9222,\n      \"routeCode\": \"Route123\",\n      \"regionsCode\": [\n        \"string\",\n        \"string\"\n      ],\n      \"itinerary\": [\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 97,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 4207,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ],\n      \"status\": \"NOT_VALID\",\n      \"dateRange\": {\n        \"startDate\": \"2025-06-20\",\n        \"endDate\": \"2025-08-20\"\n      },\n      \"serviceClassCode\": \"1\",\n      \"brandCode\": \"BrandCode\",\n      \"combination\": [\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"PARTIAL_TRIP\"\n        },\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"FULL_TRIP\"\n        }\n      ],\n      \"vehicleType\": [\n        \"BUS01\",\n        \"BUS02\"\n      ],\n      \"tripType\": \"string\"\n    },\n    {\n      \"tripCode\": \"TRIP123\",\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"weekDays\": \"0111110\",\n      \"distance\": 1562,\n      \"seats\": 73,\n      \"routeCode\": \"Route123\",\n      \"regionsCode\": [\n        \"string\",\n        \"string\"\n      ],\n      \"itinerary\": [\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 9947,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 7596,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ],\n      \"status\": \"NOT_VALID\",\n      \"dateRange\": {\n        \"startDate\": \"2025-06-20\",\n        \"endDate\": \"2025-08-20\"\n      },\n      \"serviceClassCode\": \"1\",\n      \"brandCode\": \"BrandCode\",\n      \"combination\": [\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"PARTIAL_TRIP\"\n        },\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"FULL_TRIP\"\n        }\n      ],\n      \"vehicleType\": [\n        \"BUS01\",\n        \"BUS02\"\n      ],\n      \"tripType\": \"string\"\n    }\n  ],\n  \"totalRecords\": 3144,\n  \"currentPage\": 9421,\n  \"totalPages\": 63\n}"
												},
												{
													"name": "Accepted",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/detail?limit=20&offset=0&startDate=string&tripCode=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																},
																{
																	"key": "tripCode",
																	"value": "string",
																	"description": "Trip code to filter for"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "scheduledTripSummary",
									"item": [
										{
											"name": "/ext/v1/trip/scheduledTripSummary",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip",
														"scheduledTripSummary"
													]
												}
											},
											"response": [
												{
													"name": "Trip Segment information.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"scheduledTripCode\": \"SCHTRIP01\",\n      \"date\": \"2025-08-27\"\n    },\n    {\n      \"scheduledTripCode\": \"SCHTRIP01\",\n      \"date\": \"2025-08-27\"\n    }\n  ],\n  \"totalRecords\": 2745,\n  \"currentPage\": 5773,\n  \"totalPages\": 8867\n}"
												},
												{
													"name": "Accepted",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"startDate\": \"2025-01-01\",\n  \"endDate\": \"2025-12-31\",\n  \"tripCodes\": [\n    \"string\",\n    \"string\"\n  ],\n  \"limit\": 20,\n  \"offset\": 0\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/trip/scheduledTripSummary",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"trip",
																"scheduledTripSummary"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/trip",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string&tripCode=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"trip"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Only resources from this date onwards will be included in the response."
												},
												{
													"key": "tripCode",
													"value": "string",
													"description": "Trip code to filter for"
												},
												{
													"key": "tripCode",
													"value": "string",
													"description": "Trip code to filter for"
												}
											]
										}
									},
									"response": [
										{
											"name": "Trip information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"tripCode\": \"TRIP123\",\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"weekDays\": \"0111110\",\n      \"routeCode\": \"Route123\",\n      \"dateRange\": {\n        \"startDate\": \"2025-06-20\",\n        \"endDate\": \"2025-08-20\"\n      },\n      \"status\": \"VALID\",\n      \"scheduledTrips\": \"string\"\n    },\n    {\n      \"tripCode\": \"TRIP123\",\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"weekDays\": \"0111110\",\n      \"routeCode\": \"Route123\",\n      \"dateRange\": {\n        \"startDate\": \"2025-06-20\",\n        \"endDate\": \"2025-08-20\"\n      },\n      \"status\": \"NOT_VALID\",\n      \"scheduledTrips\": 7407.782140743438\n    }\n  ],\n  \"totalRecords\": 4040,\n  \"currentPage\": 9954,\n  \"totalPages\": 7518\n}"
										},
										{
											"name": "Accepted",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/trip?limit=20&offset=0&startDate=string&tripCode=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"trip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "tripCode",
															"value": "string",
															"description": "Trip code to filter for"
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "scheduledTrip",
							"item": [
								{
									"name": "detail",
									"item": [
										{
											"name": "/ext/v1/scheduledTrip/detail",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														"detail"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"response": [
												{
													"name": "Trip information.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"distance\": 3146,\n      \"seats\": 3509,\n      \"routeCode\": \"Route123\",\n      \"date\": \"2025-08-21\",\n      \"itinerary\": [\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 3780,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 1250,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ],\n      \"status\": \"DELETED\",\n      \"tripCode\": \"TRIP123\",\n      \"vehicleType\": [\n        \"BUS01\",\n        \"BUS02\"\n      ],\n      \"serviceClassCode\": \"string\",\n      \"regionsCode\": [\n        \"string\",\n        \"string\"\n      ],\n      \"brandCode\": \"brandCode\",\n      \"scheduledTripCode\": \"string\",\n      \"combination\": [\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"PARTIAL_TRIP\"\n        },\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"FULL_TRIP\"\n        }\n      ],\n      \"zone\": \"ZoneA\",\n      \"rol\": \"string\",\n      \"payReference\": \"string\",\n      \"operativeStatus\": \"string\"\n    },\n    {\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"distance\": 8582,\n      \"seats\": 6850,\n      \"routeCode\": \"Route123\",\n      \"date\": \"2025-08-21\",\n      \"itinerary\": [\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 8016,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"originPlaceCode\": \"PLA01\",\n          \"order\": 4879,\n          \"stopTime\": \"PT1H15M30S\",\n          \"destinationPlaceCode\": \"PLA02\",\n          \"segmentCode\": \"SEG01\",\n          \"startTime\": \"06:20:00\",\n          \"endTime\": \"08:00:00\",\n          \"actions\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ],\n      \"status\": \"DELETED\",\n      \"tripCode\": \"TRIP123\",\n      \"vehicleType\": [\n        \"BUS01\",\n        \"BUS02\"\n      ],\n      \"serviceClassCode\": \"string\",\n      \"regionsCode\": [\n        \"string\",\n        \"string\"\n      ],\n      \"brandCode\": \"brandCode\",\n      \"scheduledTripCode\": \"string\",\n      \"combination\": [\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"PARTIAL_TRIP\"\n        },\n        {\n          \"segmentCode\": \"string\",\n          \"originPlaceCode\": \"string\",\n          \"destinationPlaceCode\": \"string\",\n          \"sectionType\": \"PARTIAL_TRIP\"\n        }\n      ],\n      \"zone\": \"ZoneA\",\n      \"rol\": \"string\",\n      \"payReference\": \"string\",\n      \"operativeStatus\": \"string\"\n    }\n  ],\n  \"totalRecords\": 2045,\n  \"currentPage\": 33,\n  \"totalPages\": 8733\n}"
												},
												{
													"name": "Accepted",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/detail?limit=20&offset=0&startDate=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"detail"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Only resources from this date onwards will be included in the response."
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{scheduledTripCode}",
									"item": [
										{
											"name": "ticketStatus",
											"item": [
												{
													"name": "/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode",
																"ticketStatus"
															],
															"variable": [
																{
																	"key": "scheduledTripCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"scheduledTripCode\": \"TRIP01\",\n  \"scheduledTripTicketStatus\": \"TICKETS_SOLD\"\n}"
														},
														{
															"name": "Accepted",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Request Timeout",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Request Timeout",
															"code": 408,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Too Many Requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Service Unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/ticketStatus",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"ticketStatus"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Service Unavailable",
															"code": 503,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "detail",
											"item": [
												{
													"name": "/ext/v1/scheduledTrip/:scheduledTripCode/detail",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode",
																"detail"
															],
															"variable": [
																{
																	"key": "scheduledTripCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"originPlaceCode\": \"PLACE01\",\n  \"destinationPlaceCode\": \"PLACE99\",\n  \"startTime\": \"08:00\",\n  \"endTime\": \"10:00\",\n  \"distance\": 3787,\n  \"seats\": 1573,\n  \"routeCode\": \"Route123\",\n  \"date\": \"2025-08-21\",\n  \"itinerary\": [\n    {\n      \"originPlaceCode\": \"PLA01\",\n      \"order\": 5210,\n      \"stopTime\": \"PT1H15M30S\",\n      \"destinationPlaceCode\": \"PLA02\",\n      \"segmentCode\": \"SEG01\",\n      \"startTime\": \"06:20:00\",\n      \"endTime\": \"08:00:00\",\n      \"actions\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"originPlaceCode\": \"PLA01\",\n      \"order\": 2319,\n      \"stopTime\": \"PT1H15M30S\",\n      \"destinationPlaceCode\": \"PLA02\",\n      \"segmentCode\": \"SEG01\",\n      \"startTime\": \"06:20:00\",\n      \"endTime\": \"08:00:00\",\n      \"actions\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ],\n  \"status\": \"EDITING\",\n  \"tripCode\": \"TRIP123\",\n  \"vehicleType\": [\n    \"BUS01\",\n    \"BUS02\"\n  ],\n  \"serviceClassCode\": \"string\",\n  \"regionsCode\": [\n    \"string\",\n    \"string\"\n  ],\n  \"brandCode\": \"brandCode\",\n  \"scheduledTripCode\": \"string\",\n  \"combination\": [\n    {\n      \"segmentCode\": \"string\",\n      \"originPlaceCode\": \"string\",\n      \"destinationPlaceCode\": \"string\",\n      \"sectionType\": \"FULL_TRIP\"\n    },\n    {\n      \"segmentCode\": \"string\",\n      \"originPlaceCode\": \"string\",\n      \"destinationPlaceCode\": \"string\",\n      \"sectionType\": \"FULL_TRIP\"\n    }\n  ],\n  \"zone\": \"ZoneA\",\n  \"rol\": \"string\",\n  \"payReference\": \"string\",\n  \"operativeStatus\": \"string\"\n}"
														},
														{
															"name": "Accepted",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Accepted",
															"code": 202,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Request Timeout",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Request Timeout",
															"code": 408,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Conflict",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Too Many Requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Service Unavailable",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/detail",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"detail"
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Service Unavailable",
															"code": 503,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "request",
											"item": [
												{
													"name": "/ext/v1/scheduledTrip/:scheduledTripCode/request",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode",
																"request"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Request identifier for the request.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"requestId\": \"REQ000123\"\n}"
														},
														{
															"name": "Bad Request – Invalid input or missing required fields.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Unauthorized – Authentication required.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden – Insufficient permissions.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Not Found – Scheduled trip not found.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Request Timeout.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Request Timeout",
															"code": 408,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal Server Error.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode/request?reason=OTHERS",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"scheduledTrip",
																		":scheduledTripCode",
																		"request"
																	],
																	"query": [
																		{
																			"key": "reason",
																			"value": "OTHERS",
																			"description": "(Required) Reason for deleting the scheduled trip"
																		}
																	],
																	"variable": [
																		{
																			"key": "scheduledTripCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "/ext/v1/scheduledTrip/:scheduledTripCode",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														":scheduledTripCode"
													],
													"variable": [
														{
															"key": "scheduledTripCode",
															"value": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"originPlaceCode\": \"PLACE01\",\n  \"destinationPlaceCode\": \"PLACE99\",\n  \"startTime\": \"08:00\",\n  \"endTime\": \"10:00\",\n  \"routeCode\": \"Route123\",\n  \"date\": \"2025-08-21\",\n  \"scheduledTripCode\": \"STRP01\",\n  \"status\": \"NOT_VALID\",\n  \"tripCode\": \"TRIP123\",\n  \"operativeStatus\": \"string\"\n}"
												},
												{
													"name": "Accepted",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/ext/v1/scheduledTrip/:scheduledTripCode",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														":scheduledTripCode"
													],
													"query": [
														{
															"key": "reason",
															"value": "OTHERS",
															"description": "(Required) Reason for deleting the scheduled trip"
														}
													],
													"variable": [
														{
															"key": "scheduledTripCode",
															"value": "string",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Request identifier for the request.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"requestId\": \"REQ000123\"\n}"
												},
												{
													"name": "Bad Request – Invalid input or missing required fields.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Unauthorized – Authentication required.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden – Insufficient permissions.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Not Found – Scheduled trip not found.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/:scheduledTripCode?reason=OTHERS",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																":scheduledTripCode"
															],
															"query": [
																{
																	"key": "reason",
																	"value": "OTHERS",
																	"description": "(Required) Reason for deleting the scheduled trip"
																}
															],
															"variable": [
																{
																	"key": "scheduledTripCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "ticketStatus",
									"item": [
										{
											"name": "/ext/v1/scheduledTrip/ticketStatus",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														"ticketStatus"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												},
												"description": "Retrieves a paginated list of ticket sales statuses for scheduled trips"
											},
											"response": [
												{
													"name": "Paginated response with all the active published trips and their status",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"scheduledTripCode\": \"TRIP01\",\n      \"scheduledTripTicketStatus\": \"TICKETS_SOLD\"\n    },\n    {\n      \"scheduledTripCode\": \"TRIP01\",\n      \"scheduledTripTicketStatus\": \"TICKETS_SOLD\"\n    }\n  ],\n  \"totalRecords\": 368,\n  \"currentPage\": 9064,\n  \"totalPages\": 6684\n}"
												},
												{
													"name": "Accepted",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Accepted",
													"code": 202,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/ext/v1/scheduledTrip/ticketStatus",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"scheduledTripId\": \"TRIP02\",\n    \"status\": \"TICKETS_SOLD\"\n  },\n  {\n    \"scheduledTripId\": \"TRIP03\",\n    \"status\": \"TICKETS_SOLD\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														"ticketStatus"
													]
												},
												"description": "Updates the ticket sales status for one or more scheduled trips. Expects an array of ticket status objects in the request body"
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"scheduledTripId\": \"TRIP02\",\n    \"status\": \"TICKETS_SOLD\"\n  },\n  {\n    \"scheduledTripId\": \"TRIP03\",\n    \"status\": \"TICKETS_SOLD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"scheduledTripId\": \"TRIP02\",\n    \"status\": \"TICKETS_SOLD\"\n  },\n  {\n    \"scheduledTripId\": \"TRIP03\",\n    \"status\": \"TICKETS_SOLD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"scheduledTripId\": \"TRIP02\",\n    \"status\": \"TICKETS_SOLD\"\n  },\n  {\n    \"scheduledTripId\": \"TRIP03\",\n    \"status\": \"TICKETS_SOLD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"scheduledTripId\": \"TRIP02\",\n    \"status\": \"TICKETS_SOLD\"\n  },\n  {\n    \"scheduledTripId\": \"TRIP03\",\n    \"status\": \"TICKETS_SOLD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict due to duplicate or immutable field mismatch",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"scheduledTripId\": \"TRIP02\",\n    \"status\": \"TICKETS_SOLD\"\n  },\n  {\n    \"scheduledTripId\": \"TRIP03\",\n    \"status\": \"TICKETS_SOLD\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/ticketStatus",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"ticketStatus"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "request",
									"item": [
										{
											"name": "/ext/v1/scheduledTrip/request",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"scheduledTripCode\": \"SCHTRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 8170,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 1178,\n        \"placeCode\": \"PLACE01\"\n      }\n    ]\n  },\n  {\n    \"scheduledTripCode\": \"SCHTRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 4588,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 9975,\n        \"placeCode\": \"PLACE01\"\n      }\n    ]\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														"request"
													]
												},
												"description": "Submit a request to edit one or more scheduled trips"
											},
											"response": [
												{
													"name": "Array of request identifiers for each scheduled trip edition request.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"scheduledTripCode\": \"SCHTRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 8170,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 1178,\n        \"placeCode\": \"PLACE01\"\n      }\n    ]\n  },\n  {\n    \"scheduledTripCode\": \"SCHTRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 4588,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 9975,\n        \"placeCode\": \"PLACE01\"\n      }\n    ]\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"requestId\": \"REQ000123\"\n  },\n  {\n    \"requestId\": \"REQ000123\"\n  }\n]"
												}
											]
										},
										{
											"name": "/ext/v1/scheduledTrip/request",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip",
														"request"
													]
												},
												"description": "Submits a request to create one or more scheduled trips based on existing trips or scheduled trips. This is an atomic operation."
											},
											"response": [
												{
													"name": "Array of operation identifiers for each scheduled trip creation request.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"requestId\": \"REQ000123\"\n  },\n  {\n    \"requestId\": \"REQ000123\"\n  }\n]"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Conflict",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Too Many Requests",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Too Many Requests",
													"code": 429,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Service Unavailable",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5875,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 7823,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  },\n  {\n    \"referenceType\": \"TRIP\",\n    \"referenceCode\": \"TRP12345\",\n    \"sortedPlaces\": [\n      {\n        \"order\": 5925,\n        \"placeCode\": \"PLACE01\"\n      },\n      {\n        \"order\": 6277,\n        \"placeCode\": \"PLACE01\"\n      }\n    ],\n    \"brandCode\": \"brandCode\",\n    \"serviceClassCode\": \"string\",\n    \"scheduledTripDate\": \"2025-07-10\"\n  }\n]",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/scheduledTrip/request",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"scheduledTrip",
																"request"
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/scheduledTrip",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"scheduledTrip"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Only resources from this date onwards will be included in the response."
												}
											]
										}
									},
									"response": [
										{
											"name": "Trip information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"routeCode\": \"Route123\",\n      \"date\": \"2025-08-21\",\n      \"scheduledTripCode\": \"STRP01\",\n      \"status\": \"DELETED\",\n      \"tripCode\": \"TRIP123\",\n      \"operativeStatus\": \"string\"\n    },\n    {\n      \"originPlaceCode\": \"PLACE01\",\n      \"destinationPlaceCode\": \"PLACE99\",\n      \"startTime\": \"08:00\",\n      \"endTime\": \"10:00\",\n      \"routeCode\": \"Route123\",\n      \"date\": \"2025-08-21\",\n      \"scheduledTripCode\": \"STRP01\",\n      \"status\": \"VALID\",\n      \"tripCode\": \"TRIP123\",\n      \"operativeStatus\": \"string\"\n    }\n  ],\n  \"totalRecords\": 321,\n  \"currentPage\": 3083,\n  \"totalPages\": 8591\n}"
										},
										{
											"name": "Accepted",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Service Unavailable",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/scheduledTrip?limit=20&offset=0&startDate=string",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"scheduledTrip"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "businessUnit",
							"item": [
								{
									"name": "members",
									"item": [
										{
											"name": "/ext/v1/businessUnit/members",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&businessUnitCodes=string&staffCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit",
														"members"
													],
													"query": [
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
														},
														{
															"key": "businessUnitCodes",
															"value": "string",
															"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
														},
														{
															"key": "relationType",
															"value": "TRANSFER",
															"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												},
												"description": "/ext/v1/businessUnit/members"
											},
											"response": [
												{
													"name": "Detailed business unit information of staff.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"businessUnitCode\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"2023-07-26\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"1993-11-21\"\n        },\n        {\n          \"startDate\": \"1966-09-06\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"endDate\": \"1955-05-22\"\n        }\n      ]\n    },\n    {\n      \"businessUnitCode\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"1961-04-01\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"1975-01-12\"\n        },\n        {\n          \"startDate\": \"2002-04-29\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"2024-07-31\"\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 9502,\n  \"currentPage\": 3583,\n  \"totalPages\": 7689\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/businessUnit/members?businessUnitCodes=string&staffCodes=string&relationType=TRANSFER&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"businessUnit",
																"members"
															],
															"query": [
																{
																	"key": "businessUnitCodes",
																	"value": "string",
																	"description": "List of unique business unit identifiers to filter the results. Only data associated with the specified business unit(s) will be returned."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only business units associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "relationType",
																	"value": "TRANSFER",
																	"description": "Relation type a staff member needs to have with the business unit in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a business unit begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a business unit ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/businessUnit",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"businessUnit"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										},
										"description": "/ext/v1/businessUnit"
									},
									"response": [
										{
											"name": "Business unit basic information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"businessUnitShortName\": \"GlobOps\",\n      \"bussinessUnitCode\": \"BU001\",\n      \"businessUnitStatus\": \"ACTIVE\",\n      \"businessUnitLongName\": \"Global Operations\"\n    },\n    {\n      \"businessUnitShortName\": \"GlobOps\",\n      \"bussinessUnitCode\": \"BU001\",\n      \"businessUnitStatus\": \"ACTIVE\",\n      \"businessUnitLongName\": \"Global Operations\"\n    }\n  ],\n  \"totalRecords\": 9147,\n  \"currentPage\": 8031,\n  \"totalPages\": 9420\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/businessUnit",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/businessUnit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"businessUnit"
											]
										},
										"description": "Creates or updates business units. If a businessUnitCode exists, it updates the business unit; otherwise, it creates a new one."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  },\n  {\n    \"businessUnitShortName\": \"GlobOps\",\n    \"bussinessUnitCode\": \"BU001\",\n    \"businessUnitStatus\": \"ACTIVE\",\n    \"businessUnitLongName\": \"Global Operations\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/businessUnit",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"businessUnit"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "workingGroup",
							"item": [
								{
									"name": "members",
									"item": [
										{
											"name": "/ext/v1/workingGroup/members",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&staffCodes=string&workingGroupCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup",
														"members"
													],
													"query": [
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for"
														},
														{
															"key": "workingGroupCodes",
															"value": "string",
															"description": "Identifiers of working groups to filter for"
														},
														{
															"key": "relationType",
															"value": "ANY",
															"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Detailed working groups information of staff.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"workingGroupCode\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"2008-09-26\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"endDate\": \"2015-01-27\"\n        },\n        {\n          \"startDate\": \"2009-10-15\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"endDate\": \"1973-02-09\"\n        }\n      ]\n    },\n    {\n      \"workingGroupCode\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"1994-03-20\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"1975-02-01\"\n        },\n        {\n          \"startDate\": \"1973-09-30\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"2003-09-19\"\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 9441,\n  \"currentPage\": 5952,\n  \"totalPages\": 2884\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/workingGroup/members?staffCodes=string&workingGroupCodes=string&relationType=ANY&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"workingGroup",
																"members"
															],
															"query": [
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "List of unique staff identifiers to filter the results. Only working groups associated with the specified staff member(s) will be returned."
																},
																{
																	"key": "workingGroupCodes",
																	"value": "string",
																	"description": "Identifiers of working groups to filter for"
																},
																{
																	"key": "relationType",
																	"value": "ANY",
																	"description": "Relation type a staff member needs to have with the working group in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Start date (inclusive) to filter staff whose assignment to a working group begins on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) End date (inclusive) to filter staff whose assignment to a working group ends on or before this date."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/workingGroup",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"workingGroup"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										}
									},
									"response": [
										{
											"name": "Working groups information of staff.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"workingGroupShortName\": \"GlobOps\",\n      \"workingGroupCode\": \"WG001\",\n      \"workingGroupStatus\": \"ACTIVE\",\n      \"workingGroupLongName\": \"Global Operations Team\"\n    },\n    {\n      \"workingGroupShortName\": \"GlobOps\",\n      \"workingGroupCode\": \"WG001\",\n      \"workingGroupStatus\": \"ACTIVE\",\n      \"workingGroupLongName\": \"Global Operations Team\"\n    }\n  ],\n  \"totalRecords\": 4761,\n  \"currentPage\": 4364,\n  \"totalPages\": 9000\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/workingGroup",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/workingGroup",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"workingGroup"
											]
										},
										"description": "Creates or updates working groups. If a workingGroupCode exists, the working group is updated; otherwise, a new one is created."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  },\n  {\n    \"workingGroupShortName\": \"GlobOps\",\n    \"workingGroupCode\": \"WG001\",\n    \"workingGroupStatus\": \"ACTIVE\",\n    \"workingGroupLongName\": \"Global Operations Team\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/workingGroup",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"workingGroup"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "depot",
							"item": [
								{
									"name": "members",
									"item": [
										{
											"name": "{depotCode}",
											"item": [
												{
													"name": "/ext/v1/depot/members/:depotCode",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members",
																":depotCode"
															],
															"variable": [
																{
																	"key": "depotCode",
																	"value": "string",
																	"description": "(Required) Depot code"
																}
															]
														}
													},
													"response": [
														{
															"name": "Full details of the requested depot.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"depotsCode\": \"string\",\n  \"relationType\": \"LINK\",\n  \"startDate\": \"1963-10-10\",\n  \"endDate\": \"2009-09-05\"\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Resource not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Request Timeout",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "Request Timeout",
															"code": 408,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal Server Error",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/depot/members/:depotCode",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"depot",
																		"members",
																		":depotCode"
																	],
																	"variable": [
																		{
																			"key": "depotCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "/ext/v1/depot/members",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&depotCodes=string&staffCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot",
														"members"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "staffCodes",
															"value": "string",
															"description": "Identifiers of staff to filter for."
														},
														{
															"key": "relationType",
															"value": "LINK",
															"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"response": [
												{
													"name": "Detailed depots information of staff.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"code\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"2003-02-06\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"2024-09-15\"\n        },\n        {\n          \"startDate\": \"1956-07-11\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"LINK\",\n          \"endDate\": \"1969-05-17\"\n        }\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"shortName\": \"string\",\n      \"members\": [\n        {\n          \"startDate\": \"1974-10-31\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"1997-01-31\"\n        },\n        {\n          \"startDate\": \"1995-04-09\",\n          \"staffCode\": \"string\",\n          \"relationType\": \"TRANSFER\",\n          \"endDate\": \"2012-03-25\"\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 8519,\n  \"currentPage\": 9086,\n  \"totalPages\": 359\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/depot/members?depotCodes=string&staffCodes=string&relationType=LINK&startDate={{startDate}}&endDate={{endDate}}&limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"depot",
																"members"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for."
																},
																{
																	"key": "staffCodes",
																	"value": "string",
																	"description": "Identifiers of staff to filter for."
																},
																{
																	"key": "relationType",
																	"value": "LINK",
																	"description": "Relation type a staff member needs to have with the depot in order to be considered in the filter."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity begins."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Date from which the relation between the depot and the associated resource or entity ends."
																},
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/depot",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"depot"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										},
										"description": "Retrieves a paginated list of depots, including details such as depot codes, long names, short names, and status."
									},
									"response": [
										{
											"name": "Basic depots information",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"depotCode\": \"DPT001\",\n      \"depotLongName\": \"Central Distribution Depot\",\n      \"depotShortName\": \"CentDist\",\n      \"depotStatus\": \"ACTIVE\",\n      \"depotShortCode\": \"string\"\n    },\n    {\n      \"depotCode\": \"DPT001\",\n      \"depotLongName\": \"Central Distribution Depot\",\n      \"depotShortName\": \"CentDist\",\n      \"depotStatus\": \"ACTIVE\",\n      \"depotShortCode\": \"string\"\n    }\n  ],\n  \"totalRecords\": 8557,\n  \"currentPage\": 2837,\n  \"totalPages\": 8334\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/depot",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/depot",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"depot"
											]
										},
										"description": "Creates or updates depots: if a depot code exists, it updates the depot; otherwise, it creates a new one."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  },\n  {\n    \"depotCode\": \"DPT001\",\n    \"depotLongName\": \"Central Distribution Depot\",\n    \"depotShortName\": \"CentDist\",\n    \"depotStatus\": \"ACTIVE\",\n    \"depotShortCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/depot",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"depot"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "parking",
							"item": [
								{
									"name": "/ext/v1/parking/",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"parking",
												""
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										},
										"description": "Retrieves a paginated list of parking locations"
									},
									"response": [
										{
											"name": "Paginated list of parking locations",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"parkingCode\": \"PKG001\",\n      \"parkingShortName\": \"MainLot\",\n      \"parkingLongName\": \"Main Depot Parking Lot\",\n      \"depotCode\": \"DPT001\",\n      \"location\": {\n        \"longitude\": 4145.341962557028,\n        \"latitude\": 4968.980321970862\n      },\n      \"externalCode\": \"EXT12345\"\n    },\n    {\n      \"parkingCode\": \"PKG001\",\n      \"parkingShortName\": \"MainLot\",\n      \"parkingLongName\": \"Main Depot Parking Lot\",\n      \"depotCode\": \"DPT001\",\n      \"location\": {\n        \"longitude\": 5600.330442645982,\n        \"latitude\": 8755.268115661971\n      },\n      \"externalCode\": \"EXT12345\"\n    }\n  ],\n  \"totalRecords\": 1238,\n  \"currentPage\": 6988,\n  \"totalPages\": 3265\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/parking/",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/parking/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"parking",
												""
											]
										},
										"description": "Creates or updates parking locations. If an externalCode exists, it updates the parking; otherwise, it creates a new one."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 415.30497830160715,\n      \"latitude\": 6257.622836417565\n    },\n    \"externalCode\": \"EXT12345\"\n  },\n  {\n    \"parkingCode\": \"PKG001\",\n    \"parkingShortName\": \"MainLot\",\n    \"parkingLongName\": \"Main Depot Parking Lot\",\n    \"depotCode\": \"DPT001\",\n    \"location\": {\n      \"longitude\": 1024.1713753918468,\n      \"latitude\": 9289.317039154996\n    },\n    \"externalCode\": \"EXT12345\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/parking/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"parking",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "line",
							"item": [
								{
									"name": "/ext/v1/line/",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"line",
												""
											],
											"query": [
												{
													"key": "limit",
													"value": "7824",
													"description": "Maximum number of records to return (page size)."
												},
												{
													"key": "offset",
													"value": "7824",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										}
									},
									"response": [
										{
											"name": "Summary of lines.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"lineCode\": \"string\",\n      \"lineName\": \"string\",\n      \"lineShortName\": \"string\",\n      \"commercialName\": \"string\",\n      \"color\": \"#A47864\",\n      \"lineStatus\": \"ACTIVE\"\n    },\n    {\n      \"lineCode\": \"string\",\n      \"lineName\": \"string\",\n      \"lineShortName\": \"string\",\n      \"commercialName\": \"string\",\n      \"color\": \"#A47864\",\n      \"lineStatus\": \"ACTIVE\"\n    }\n  ],\n  \"totalRecords\": 1628,\n  \"currentPage\": 1772,\n  \"totalPages\": 241\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/line",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/line/",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"line",
												""
											]
										},
										"description": "Creates or updates lines. If a lineCode exists, it updates the line; otherwise, it creates a new one."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  },\n  {\n    \"lineCode\": \"string\",\n    \"lineName\": \"string\",\n    \"lineShortName\": \"string\",\n    \"commercialName\": \"string\",\n    \"color\": \"#A47864\",\n    \"lineStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/line/",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"line",
														""
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "shiftTypes",
							"item": [
								{
									"name": "/ext/v1/shiftTypes",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"shiftTypes"
											],
											"query": [
												{
													"key": "limit",
													"value": "7824",
													"description": "Maximum number of records to return (page size)."
												},
												{
													"key": "offset",
													"value": "7824",
													"description": "Number of records to skip from the beginning of the collection."
												}
											]
										},
										"description": "Retrieves a paginated list of shift types with their basic details"
									},
									"response": [
										{
											"name": "Shift type information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"shiftTypeShortName\": \"string\",\n      \"shiftTypeLongName\": \"string\",\n      \"shiftTypeCode\": \"string\",\n      \"shiftTypeStatus\": \"ACTIVE\"\n    },\n    {\n      \"shiftTypeShortName\": \"string\",\n      \"shiftTypeLongName\": \"string\",\n      \"shiftTypeCode\": \"string\",\n      \"shiftTypeStatus\": \"ACTIVE\"\n    }\n  ],\n  \"totalRecords\": 7156,\n  \"currentPage\": 5008,\n  \"totalPages\": 191\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes?limit=7824&offset=7824",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													],
													"query": [
														{
															"key": "limit",
															"value": "7824",
															"description": "Maximum number of records to return (page size)."
														},
														{
															"key": "offset",
															"value": "7824",
															"description": "Number of records to skip from the beginning of the collection."
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/shiftType",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/shiftTypes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"shiftTypes"
											]
										},
										"description": "Creates or updates shift types. If a shiftTypeCode exists, it updates; otherwise, it creates a new shift type."
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"INACTIVE\"\n  },\n  {\n    \"shiftTypeShortName\": \"string\",\n    \"shiftTypeLongName\": \"string\",\n    \"shiftTypeCode\": \"string\",\n    \"shiftTypeStatus\": \"ACTIVE\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/shiftTypes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"shiftTypes"
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "absenceConfig",
							"item": [
								{
									"name": "{absenceConfigCode}",
									"item": [
										{
											"name": "/ext/v1/absenceConfig/{absenceConfigCode}",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig",
														":absenceConfigCode"
													],
													"variable": [
														{
															"key": "absenceConfigCode",
															"value": "",
															"description": "(Required) "
														}
													]
												}
											},
											"response": [
												{
													"name": "Full details of the requested absence configuration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Vacation\",\n  \"shortName\": \"Vac\",\n  \"absenceConfigCode\": \"EXT123\",\n  \"type\": \"Free\",\n  \"hourly\": false,\n  \"equivalentWorkTimeHour\": \"08:30:00\",\n  \"limit\": 1102,\n  \"workAssignmentEligibility\": \"NotEligible\",\n  \"availableForDriver\": true,\n  \"active\": true\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/ext/v1/absenceConfig/{absenceConfigCode}",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"active\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig",
														":absenceConfigCode"
													],
													"variable": [
														{
															"key": "absenceConfigCode",
															"value": "",
															"description": "(Required) "
														}
													]
												},
												"description": "This endpoint allows toggling the active status between active and inactive for the specified absence configuration."
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"active\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "/ext/v1/absenceType/{absenceTypeCode}",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig",
														":absenceConfigCode"
													],
													"variable": [
														{
															"key": "absenceConfigCode",
															"value": "",
															"description": "(Required) "
														}
													]
												},
												"description": "Partially updates an existing absence type identified by absenceTypeCode. Only the editable fields provided in the request body will be modified; other fields remain unchanged."
											},
											"response": [
												{
													"name": "Response with the status of the operation, including summary and details of errors or warnings",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Updated Vacation\",\n  \"shortName\": \"UpdVac\",\n  \"type\": \"Work\",\n  \"equivalentWorkTimeHour\": 1174.3727306586616,\n  \"workAssignmentEligibility\": \"OnCall\",\n  \"availableForDriver\": true\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/ext/v1/absenceConfig/:absenceConfigCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"absenceConfig",
																":absenceConfigCode"
															],
															"variable": [
																{
																	"key": "absenceConfigCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/absenceConfig",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"absenceConfig"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										},
										"description": "get absences"
									},
									"response": [
										{
											"name": "Absence configuration information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"name\": \"Vacation\",\n      \"shortName\": \"Vac\",\n      \"absenceConfigCode\": \"EXT123\",\n      \"type\": \"Free\",\n      \"hourly\": false,\n      \"equivalentWorkTimeHour\": \"08:30:00\",\n      \"limit\": 2366,\n      \"workAssignmentEligibility\": \"NotEligible\",\n      \"availableForDriver\": true,\n      \"active\": true\n    },\n    {\n      \"name\": \"Vacation\",\n      \"shortName\": \"Vac\",\n      \"absenceConfigCode\": \"EXT123\",\n      \"type\": \"Free\",\n      \"hourly\": false,\n      \"equivalentWorkTimeHour\": \"08:30:00\",\n      \"limit\": 9900,\n      \"workAssignmentEligibility\": \"NotEligible\",\n      \"availableForDriver\": false,\n      \"active\": true\n    }\n  ],\n  \"totalRecords\": 4997,\n  \"currentPage\": 3241,\n  \"totalPages\": 2938\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/absenceConfig",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 2815,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": false,\n    \"active\": true\n  },\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 6109,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": true,\n    \"active\": true\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/absenceConfig?processingMode=ATOMIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"absenceConfig"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												}
											]
										},
										"description": "Allows bulk creation of one or more absenceConfig"
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 2815,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": false,\n    \"active\": true\n  },\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 6109,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": true,\n    \"active\": true\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 2815,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": false,\n    \"active\": true\n  },\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 6109,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": true,\n    \"active\": true\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 2815,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": false,\n    \"active\": true\n  },\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 6109,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": true,\n    \"active\": true\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 2815,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": false,\n    \"active\": true\n  },\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 6109,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": true,\n    \"active\": true\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 2815,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": false,\n    \"active\": true\n  },\n  {\n    \"name\": \"Vacation\",\n    \"shortName\": \"Vac\",\n    \"absenceConfigCode\": \"EXT123\",\n    \"type\": \"Free\",\n    \"hourly\": false,\n    \"equivalentWorkTimeHour\": \"08:30:00\",\n    \"limit\": 6109,\n    \"workAssignmentEligibility\": \"NotEligible\",\n    \"availableForDriver\": true,\n    \"active\": true\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/absenceConfig?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"absenceConfig"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "standardSeatMap",
							"item": [
								{
									"name": "{standardSeatMapCode}",
									"item": [
										{
											"name": "/ext/v1/standardSeatMap/{standardSeatMapCode}",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap",
														":standardSeatMapCode"
													],
													"variable": [
														{
															"key": "standardSeatMapCode",
															"value": "",
															"description": "(Required) "
														}
													]
												},
												"description": "Retrieves information on a specific vehicle type, including seat map, name, code, brand, service class, and status"
											},
											"response": [
												{
													"name": "Get seat maps",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"vehicleTypeCode\": \"string\",\n  \"seatNumber\": 6017,\n  \"standardSeatMapCode\": \"string\",\n  \"status\": \"INACTIVE\",\n  \"serviceClassCode\": \"string\",\n  \"brandCode\": \"string\"\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/standardSeatMap/:standardSeatMapCode",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"standardSeatMap",
																":standardSeatMapCode"
															],
															"variable": [
																{
																	"key": "standardSeatMapCode"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/standardSeatMap",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"standardSeatMap"
											],
											"query": [
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Only resources from this date onwards will be included in the response."
												},
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												}
											]
										},
										"description": "Retrieves a paginated list of available seat maps, returning their codes, names, seat counts, and related attributes"
									},
									"response": [
										{
											"name": "Vehicle type information.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"vehicleTypeCode\": \"string\",\n      \"seatNumber\": 468,\n      \"standardSeatMapCode\": \"string\",\n      \"status\": \"ACTIVE\",\n      \"serviceClassCode\": \"string\",\n      \"brandCode\": \"string\"\n    },\n    {\n      \"vehicleTypeCode\": \"string\",\n      \"seatNumber\": 4419,\n      \"standardSeatMapCode\": \"string\",\n      \"status\": \"INACTIVE\",\n      \"serviceClassCode\": \"string\",\n      \"brandCode\": \"string\"\n    }\n  ],\n  \"totalRecords\": 6725,\n  \"currentPage\": 5924,\n  \"totalPages\": 9943\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Resource not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request Timeout",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Request Timeout",
											"code": 408,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?startDate={{startDate}}&limit=20&offset=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Only resources from this date onwards will be included in the response."
														},
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "/ext/v1/standardSeatMap",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 7249,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  },\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 9559,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/ext/v1/standardSeatMap?processingMode=ATOMIC",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"standardSeatMap"
											],
											"query": [
												{
													"key": "processingMode",
													"value": "ATOMIC",
													"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
												}
											]
										},
										"description": "Creates or updates one or more standard seat map in bulk, returning the status and error details for batch operations"
									},
									"response": [
										{
											"name": "Response with the status of the operation, including summary and details of errors or warnings",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 7249,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  },\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 9559,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"executionCode\": \"string\",\n  \"summary\": {\n    \"successCount\": 6717,\n    \"errorCount\": 5434,\n    \"warningCount\": 8379\n  },\n  \"details\": [\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"ERROR\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"itemCode\": \"string\",\n      \"status\": \"WARNING\",\n      \"code\": \"string\",\n      \"message\": \"string\",\n      \"path\": \"string\",\n      \"expected\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 7249,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  },\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 9559,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 7249,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  },\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 9559,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 7249,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  },\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 9559,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Conflict due to duplicate or immutable field mismatch",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 7249,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  },\n  {\n    \"vehicleTypeCode\": \"string\",\n    \"seatNumber\": 9559,\n    \"standardSeatMapCode\": \"string\",\n    \"status\": \"INACTIVE\",\n    \"serviceClassCode\": \"string\",\n    \"brandCode\": \"string\"\n  }\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/ext/v1/standardSeatMap?processingMode=ATOMIC",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"standardSeatMap"
													],
													"query": [
														{
															"key": "processingMode",
															"value": "ATOMIC",
															"description": "(Required) Determines the processing mode for batch operations.\r\n- atomic: All items must succeed for the operation to be committed; otherwise, none are processed.\r\n- partial: Items are processed independently; successful items are committed even if others fail.\r\n"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "schedulingScenarios",
							"item": [
								{
									"name": "{scenarioCode}",
									"item": [
										{
											"name": "events",
											"item": [
												{
													"name": "/ext/v1/schedulingScenarios/:scenarioCode/events",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string&eventType=string",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"schedulingScenarios",
																":scenarioCode",
																"events"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																},
																{
																	"key": "involvedType",
																	"value": "BUS",
																	"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																},
																{
																	"key": "eventType",
																	"value": "string",
																	"description": "Event type to filter by. Only events that match the event type will be in the response."
																},
																{
																	"key": "eventType",
																	"value": "string",
																	"description": "Event type to filter by. Only events that match the event type will be in the response."
																}
															],
															"variable": [
																{
																	"key": "scenarioCode",
																	"value": "string",
																	"description": "(Required) Unique code identifying the scheduling scenario"
																}
															]
														}
													},
													"response": [
														{
															"name": "Paginated list of scheduling solution",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"data\": [\n    {\n      \"eventCode\": \"string\",\n      \"eventTypeCode\": \"string\",\n      \"direction\": 1,\n      \"startTime\": \"string\",\n      \"startPlaceCode\": \"string\",\n      \"endTime\": \"string\",\n      \"endPlaceCode\": \"string\",\n      \"duration\": \"string\",\n      \"lineCode\": \"string\",\n      \"distance\": 2747,\n      \"busCode\": \"string\",\n      \"serviceCode\": \"string\",\n      \"tripCode\": \"string\",\n      \"routeCode\": \"string\",\n      \"autonomy\": 7763.948435612285,\n      \"energyConsumed\": 9197.822345299783,\n      \"energyCharged\": 5250.086034978798,\n      \"batteryPerc\": 1.1218046362758027,\n      \"chargerTypeCode\": \"string\",\n      \"chargerNumber\": 399,\n      \"hoses\": 5817\n    },\n    {\n      \"eventCode\": \"string\",\n      \"eventTypeCode\": \"string\",\n      \"direction\": 0,\n      \"startTime\": \"string\",\n      \"startPlaceCode\": \"string\",\n      \"endTime\": \"string\",\n      \"endPlaceCode\": \"string\",\n      \"duration\": \"string\",\n      \"lineCode\": \"string\",\n      \"distance\": 6005,\n      \"busCode\": \"string\",\n      \"serviceCode\": \"string\",\n      \"tripCode\": \"string\",\n      \"routeCode\": \"string\",\n      \"autonomy\": 2043.949968965575,\n      \"energyConsumed\": 5496.122860517138,\n      \"energyCharged\": 4238.619910436702,\n      \"batteryPerc\": 19.283371193067865,\n      \"chargerTypeCode\": \"string\",\n      \"chargerNumber\": 2010,\n      \"hoses\": 2872\n    }\n  ],\n  \"totalRecords\": 4019,\n  \"currentPage\": 7061,\n  \"totalPages\": 1505\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Scheduling solutions not found for the specified scenario.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Too Many Requests",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Too Many Requests",
															"code": 429,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/events?limit=20&offset=0&involvedType=BUS&eventType=string",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"events"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		},
																		{
																			"key": "involvedType",
																			"value": "BUS",
																			"description": "Optional filter to return only events involving a bus or a service. If not specified, all events are returned."
																		},
																		{
																			"key": "eventType",
																			"value": "string",
																			"description": "Event type to filter by. Only events that match the event type will be in the response."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "logicalServices",
											"item": [
												{
													"name": "/ext/v1/schedulingScenarios/:scenarioCode/logicalServices",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"schedulingScenarios",
																":scenarioCode",
																"logicalServices"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return in the response (page size)."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning of the collection"
																}
															],
															"variable": [
																{
																	"key": "scenarioCode",
																	"value": "string",
																	"description": "(Required) Unique code identifying the scheduling scenario"
																}
															]
														}
													},
													"response": [
														{
															"name": "Paginated list of logical services for the solution",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalServices"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"data\": [\n    {\n      \"serviceCode\": \"SRVLOG01\",\n      \"shiftType\": \"M\",\n      \"startOfDuty\": \"05:30:00\",\n      \"endOfDuty\": \"14:00:00\",\n      \"dutyDuration\": \"08:30:00\",\n      \"startPlaceCode\": \"PLC01\",\n      \"endPlaceCode\": \"PLC01\",\n      \"distance\": 46,\n      \"lines\": [\n        \"LIN01\",\n        \"LIN03\"\n      ],\n      \"logicalVehicles\": [\n        \"VEHLOG01\",\n        \"VEHLOG03\"\n      ],\n      \"workCounter\": \"00:15:00\",\n      \"brkCounter\": \"00:05:00\",\n      \"dspCounter\": \"00:03:00\",\n      \"expCounter\": \"00:03:00\",\n      \"busChangeCount\": 2,\n      \"lineChangeCount\": 1\n    },\n    {\n      \"serviceCode\": \"SRVLOG01\",\n      \"shiftType\": \"M\",\n      \"startOfDuty\": \"05:30:00\",\n      \"endOfDuty\": \"14:00:00\",\n      \"dutyDuration\": \"08:30:00\",\n      \"startPlaceCode\": \"PLC01\",\n      \"endPlaceCode\": \"PLC01\",\n      \"distance\": 46,\n      \"lines\": [\n        \"LIN01\",\n        \"LIN03\"\n      ],\n      \"logicalVehicles\": [\n        \"VEHLOG01\",\n        \"VEHLOG03\"\n      ],\n      \"workCounter\": \"00:15:00\",\n      \"brkCounter\": \"00:05:00\",\n      \"dspCounter\": \"00:03:00\",\n      \"expCounter\": \"00:03:00\",\n      \"busChangeCount\": 2,\n      \"lineChangeCount\": 1\n    }\n  ],\n  \"totalRecords\": 2964,\n  \"currentPage\": 1010,\n  \"totalPages\": 5149\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalServices"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalServices"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalServices"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Logical services not found for the specified scenario solution.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalServices"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalServices?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalServices"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return in the response (page size)."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning of the collection"
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "logicalVehicles",
											"item": [
												{
													"name": "/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"schedulingScenarios",
																":scenarioCode",
																"logicalVehicles"
															],
															"query": [
																{
																	"key": "limit",
																	"value": "20",
																	"description": "Maximum number of records to return."
																},
																{
																	"key": "offset",
																	"value": "0",
																	"description": "Number of records to skip from the beginning."
																}
															],
															"variable": [
																{
																	"key": "scenarioCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "Paginated list of logical vehicles for the solution",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalVehicles"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"data\": [\n    {\n      \"vehicleCode\": \"VH1234\",\n      \"startOfDuty\": \"08:00:00\",\n      \"endOfDuty\": \"16:00:00\",\n      \"dutyDuration\": \"08:00:00\",\n      \"circulationTime\": \"07:30:00\",\n      \"startPlaceCode\": \"PLC01\",\n      \"endPlaceCode\": \"PLC05\",\n      \"distance\": 12500,\n      \"vehicleType\": \"Bus01\",\n      \"lines\": [\n        \"LIN01\",\n        \"LIN05\"\n      ],\n      \"driverChanges\": 2,\n      \"batteryStart\": 85.5,\n      \"batteryEnd\": 60.3,\n      \"chargingStops\": 2,\n      \"totalEnergyCharged\": 45.7,\n      \"totalEnergyConsumed\": 87.4\n    },\n    {\n      \"vehicleCode\": \"VH1234\",\n      \"startOfDuty\": \"08:00:00\",\n      \"endOfDuty\": \"16:00:00\",\n      \"dutyDuration\": \"08:00:00\",\n      \"circulationTime\": \"07:30:00\",\n      \"startPlaceCode\": \"PLC01\",\n      \"endPlaceCode\": \"PLC05\",\n      \"distance\": 12500,\n      \"vehicleType\": \"Bus01\",\n      \"lines\": [\n        \"LIN01\",\n        \"LIN05\"\n      ],\n      \"driverChanges\": 2,\n      \"batteryStart\": 85.5,\n      \"batteryEnd\": 60.3,\n      \"chargingStops\": 2,\n      \"totalEnergyCharged\": 45.7,\n      \"totalEnergyConsumed\": 87.4\n    }\n  ],\n  \"totalRecords\": 4677,\n  \"currentPage\": 585,\n  \"totalPages\": 9018\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalVehicles"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalVehicles"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalVehicles"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Logical vehicles not found for the specified scenario solution.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalVehicles"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/logicalVehicles?limit=20&offset=0",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"logicalVehicles"
																	],
																	"query": [
																		{
																			"key": "limit",
																			"value": "20",
																			"description": "Maximum number of records to return."
																		},
																		{
																			"key": "offset",
																			"value": "0",
																			"description": "Number of records to skip from the beginning."
																		}
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "metrics",
											"item": [
												{
													"name": "/ext/v1/schedulingScenarios/:scenarioCode/metrics",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"schedulingScenarios",
																":scenarioCode",
																"metrics"
															],
															"variable": [
																{
																	"key": "scenarioCode",
																	"value": "string",
																	"description": "(Required) "
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"metrics"
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"vehicles\": {\n    \"total\": 52,\n    \"byDepot\": [\n      {\n        \"name\": \"Central Depot\",\n        \"total\": 20\n      },\n      {\n        \"name\": \"North Garage\",\n        \"total\": 12\n      },\n      {\n        \"name\": \"South Yard\",\n        \"total\": 20\n      }\n    ],\n    \"byType\": [\n      {\n        \"name\": \"Electric\",\n        \"total\": 18\n      },\n      {\n        \"name\": \"Articulated\",\n        \"total\": 15\n      },\n      {\n        \"name\": \"Standard\",\n        \"total\": 19\n      }\n    ]\n  },\n  \"drivers\": {\n    \"total\": 36,\n    \"byResidence\": [\n      {\n        \"name\": \"Central Residency\",\n        \"total\": 18\n      },\n      {\n        \"name\": \"North Residence\",\n        \"total\": 7\n      },\n      {\n        \"name\": \"South Residence\",\n        \"total\": 11\n      }\n    ],\n    \"byShift\": [\n      {\n        \"name\": \"Morning\",\n        \"total\": 16\n      },\n      {\n        \"name\": \"Afternoon\",\n        \"total\": 12\n      },\n      {\n        \"name\": \"Night\",\n        \"total\": 8\n      }\n    ]\n  },\n  \"emptyKilometers\": 1234.5,\n  \"commercialKilometers\": 5678.9,\n  \"operationTime\": 456,\n  \"workingTime\": 123\n}"
														},
														{
															"name": "Bad request error dto.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"metrics"
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
														},
														{
															"name": "Unauthorized",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"metrics"
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Forbidden",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"metrics"
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Logical vehicles not found for the specified scenario solution.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"metrics"
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Internal server error.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "responseMode",
																		"value": "ASYNC",
																		"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/ext/v1/schedulingScenarios/:scenarioCode/metrics",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"ext",
																		"v1",
																		"schedulingScenarios",
																		":scenarioCode",
																		"metrics"
																	],
																	"variable": [
																		{
																			"key": "scenarioCode"
																		}
																	]
																}
															},
															"status": "Internal Server Error",
															"code": 500,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "/ext/v1/schedulingScenarios",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "responseMode",
												"value": "ASYNC",
												"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"ext",
												"v1",
												"schedulingScenarios"
											],
											"query": [
												{
													"key": "limit",
													"value": "20",
													"description": "Maximum number of records to return in the response (page size)."
												},
												{
													"key": "offset",
													"value": "0",
													"description": "Number of records to skip from the beginning of the collection"
												},
												{
													"key": "startDate",
													"value": "{{startDate}}",
													"description": "(Required) Start date where scenario is active"
												},
												{
													"key": "endDate",
													"value": "{{endDate}}",
													"description": "(Required) End date where scenario is active (inclusive)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Paginated list of scheduling scenarios",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"schedulingScenarios"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date where scenario is active"
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date where scenario is active (inclusive)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"date\": \"2008-09-23\",\n      \"schedulingScenarios\": [\n        {\n          \"scenarioName\": \"Weekday Standard Operation\",\n          \"scenarioCode\": \"SCN01\",\n          \"depot\": [\n            \"DEPO1\",\n            \"DEP02\"\n          ],\n          \"associatedLines\": [\n            \"LIN01\",\n            \"LIN02\"\n          ],\n          \"dayType\": \"WD\"\n        },\n        {\n          \"scenarioName\": \"Weekday Standard Operation\",\n          \"scenarioCode\": \"SCN01\",\n          \"depot\": [\n            \"DEPO1\",\n            \"DEP02\"\n          ],\n          \"associatedLines\": [\n            \"LIN01\",\n            \"LIN02\"\n          ],\n          \"dayType\": \"WD\"\n        }\n      ]\n    },\n    {\n      \"date\": \"1968-10-11\",\n      \"schedulingScenarios\": [\n        {\n          \"scenarioName\": \"Weekday Standard Operation\",\n          \"scenarioCode\": \"SCN01\",\n          \"depot\": [\n            \"DEPO1\",\n            \"DEP02\"\n          ],\n          \"associatedLines\": [\n            \"LIN01\",\n            \"LIN02\"\n          ],\n          \"dayType\": \"WD\"\n        },\n        {\n          \"scenarioName\": \"Weekday Standard Operation\",\n          \"scenarioCode\": \"SCN01\",\n          \"depot\": [\n            \"DEPO1\",\n            \"DEP02\"\n          ],\n          \"associatedLines\": [\n            \"LIN01\",\n            \"LIN02\"\n          ],\n          \"dayType\": \"WD\"\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 9035,\n  \"currentPage\": 2189,\n  \"totalPages\": 8846\n}"
										},
										{
											"name": "Bad request error dto.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"schedulingScenarios"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date where scenario is active"
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date where scenario is active (inclusive)"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"schedulingScenarios"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date where scenario is active"
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date where scenario is active (inclusive)"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"schedulingScenarios"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date where scenario is active"
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date where scenario is active (inclusive)"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Too Many Requests",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"schedulingScenarios"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date where scenario is active"
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date where scenario is active (inclusive)"
														}
													]
												}
											},
											"status": "Too Many Requests",
											"code": 429,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal server error.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/schedulingScenarios?limit=20&offset=0&startDate={{startDate}}&endDate={{endDate}}",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"schedulingScenarios"
													],
													"query": [
														{
															"key": "limit",
															"value": "20",
															"description": "Maximum number of records to return in the response (page size)."
														},
														{
															"key": "offset",
															"value": "0",
															"description": "Number of records to skip from the beginning of the collection"
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Start date where scenario is active"
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) End date where scenario is active (inclusive)"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "vehicle",
							"item": [
								{
									"name": "assignment",
									"item": [
										{
											"name": "/ext/v1/vehicle/assignment",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "responseMode",
														"value": "ASYNC",
														"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"ext",
														"v1",
														"vehicle",
														"assignment"
													],
													"query": [
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "depotCodes",
															"value": "string",
															"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
														},
														{
															"key": "assignmentScenarioCode",
															"value": "string",
															"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
														},
														{
															"key": "startDate",
															"value": "{{startDate}}",
															"description": "(Required) Filters for assignments that start on or after this date."
														},
														{
															"key": "endDate",
															"value": "{{endDate}}",
															"description": "(Required) Filters for assignments that end on or before this date."
														},
														{
															"key": "pageSize",
															"value": "20",
															"description": "Maximum number of records to return in the response."
														},
														{
															"key": "page",
															"value": "0",
															"description": "Number of page of the collection"
														}
													]
												},
												"description": "Retrieves the list of vehicle assignments grouped by vehicle"
											},
											"response": [
												{
													"name": "Summary of vehicle assignments.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"vehicleCode\": \"string\",\n      \"assignments\": [\n        {\n          \"assignmentType\": \"VEHICLE_TASK\",\n          \"day\": \"1959-10-22\",\n          \"logicalVehicle\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1973-06-06T07:32:05.353Z\",\n          \"endHour\": \"1977-03-31T21:55:12.190Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"assignmentType\": \"VEHICLE_ABSENCE\",\n          \"day\": \"2024-06-22\",\n          \"logicalVehicle\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1962-09-24T15:07:11.026Z\",\n          \"endHour\": \"1980-11-04T21:33:07.414Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ]\n    },\n    {\n      \"vehicleCode\": \"string\",\n      \"assignments\": [\n        {\n          \"assignmentType\": \"VEHICLE_ABSENCE\",\n          \"day\": \"2007-12-25\",\n          \"logicalVehicle\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"1972-04-11T12:23:10.708Z\",\n          \"endHour\": \"1952-12-31T08:33:51.765Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        },\n        {\n          \"assignmentType\": \"VEHICLE_ABSENCE\",\n          \"day\": \"1989-12-27\",\n          \"logicalVehicle\": \"string\",\n          \"assignmentScenarioCode\": \"string\",\n          \"assignmentCode\": \"string\",\n          \"startHour\": \"2006-03-23T06:51:50.753Z\",\n          \"endHour\": \"1964-10-04T07:13:54.922Z\",\n          \"startPlace\": \"string\",\n          \"endPlace\": \"string\",\n          \"_link\": \"string\",\n          \"tripCode\": [\n            \"string\",\n            \"string\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"totalRecords\": 2256,\n  \"currentPage\": 3131,\n  \"totalPages\": 2588\n}"
												},
												{
													"name": "Bad request error dto.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"code\": \"string\",\n  \"errorDescription\": \"string\",\n  \"errors\": [\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    },\n    {\n      \"code\": \"string\",\n      \"expected\": \"string\",\n      \"path\": \"string\",\n      \"value\": [\n        \"string\",\n        \"string\"\n      ]\n    }\n  ]\n}"
												},
												{
													"name": "Unauthorized",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Forbidden",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Resource not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Request Timeout",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Request Timeout",
													"code": 408,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Internal Server Error",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "responseMode",
																"value": "ASYNC",
																"description": "Specify the response mode. Use 'SYNC' for direct API response or 'ASYNC' for messaging queue."
															}
														],
														"url": {
															"raw": "{{baseUrl}}/ext/v1/vehicle/assignment?depotCodes=string&assignmentScenarioCode=string&startDate={{startDate}}&endDate={{endDate}}&pageSize=20&page=0",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"ext",
																"v1",
																"vehicle",
																"assignment"
															],
															"query": [
																{
																	"key": "depotCodes",
																	"value": "string",
																	"description": "Identifiers of depots to filter for. Only assignments that are related to any of the specified depots will be included in the results."
																},
																{
																	"key": "assignmentScenarioCode",
																	"value": "string",
																	"description": "Code of the assignment scenario to filter assignments by their publishing scenario."
																},
																{
																	"key": "startDate",
																	"value": "{{startDate}}",
																	"description": "(Required) Filters for assignments that start on or after this date."
																},
																{
																	"key": "endDate",
																	"value": "{{endDate}}",
																	"description": "(Required) Filters for assignments that end on or before this date."
																},
																{
																	"key": "pageSize",
																	"value": "20",
																	"description": "Maximum number of records to return in the response."
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "Number of page of the collection"
																}
															]
														}
													},
													"status": "Internal Server Error",
													"code": 500,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					"/**\r",
					" * PRE-REQUEST (colección)\r",
					" * - Inyecta X-TENANT-ID\r",
					" * - Obtiene/renueva access_token (Keycloak) con password o client_credentials\r",
					" *\r",
					" * Variables esperadas (env/colección):\r",
					" * identity_base_url, realm, client_id, client_secret (si confidential),\r",
					" * username, password (si grant=password), auth_grant ('password' | 'client_credentials'),\r",
					" * scope (opcional), tenant_id (p.ej. 314)\r",
					" * Opcionales por request: tenant_id_override, tenant_skip=true\r",
					" * Se rellenan solas: access_token, token_expiry\r",
					" */\r",
					"\r",
					"(function () {\r",
					"  // ---------- Helpers ----------\r",
					"  const log = (...args) => { try { console.log(...args); } catch (e) {} };\r",
					"  const gv = (name, defVal) => {\r",
					"    const v = pm.variables.get(name);\r",
					"    return (v === undefined || v === null || v === '') ? defVal : v;\r",
					"  };\r",
					"\r",
					"  // ---------- (1) X-TENANT-ID ----------\r",
					"  const tenantSkip = String(gv('tenant_skip', 'false')).toLowerCase() === 'true';\r",
					"  if (tenantSkip) {\r",
					"    pm.request.headers.remove('X-TENANT-ID');\r",
					"    log('X-TENANT-ID: skip=true');\r",
					"  } else {\r",
					"    let tenant = gv('tenant_id_override', null);\r",
					"    if (tenant === null) tenant = gv('tenant_id', null);\r",
					"    if (tenant === null) throw new Error('Falta variable tenant_id (ej.: 314).');\r",
					"\r",
					"    // upsert seguro (remove+add por compatibilidad)\r",
					"    pm.request.headers.remove('X-TENANT-ID');\r",
					"    pm.request.headers.add({ key: 'X-TENANT-ID', value: String(tenant) });\r",
					"    log('X-TENANT-ID =', String(tenant));\r",
					"  }\r",
					"\r",
					"  // ---------- (2) Token (si ya está vigente, no re-solicita) ----------\r",
					"  const now = Math.floor(Date.now() / 1000);\r",
					"  const exp = parseInt(pm.environment.get('token_expiry') || '0', 10);\r",
					"  if (exp && now < exp - 60) {\r",
					"    log('Token vigente, reutilizo. Exp:', exp);\r",
					"    return;\r",
					"  }\r",
					"\r",
					"  const base  = pm.environment.get('identity_base_url');\r",
					"  const realm = pm.environment.get('realm');\r",
					"  const tokenUrl = (pm.environment.get('keycloak_token_url')\r",
					"    || `${base}/realms/${realm}/protocol/openid-connect/token`);\r",
					"\r",
					"  const client_id     = pm.environment.get('client_id') || '';\r",
					"  const client_secret = pm.environment.get('client_secret') || '';\r",
					"  const username      = pm.environment.get('username') || '';\r",
					"  const password      = pm.environment.get('password') || '';\r",
					"  const grant         = (pm.environment.get('auth_grant') || '').trim()\r",
					"                         || (username && password ? 'password' : 'client_credentials');\r",
					"  const scope         = (pm.environment.get('scope') || '').trim();\r",
					"\r",
					"  const isConfidential = !!client_secret;\r",
					"  const headers = { 'Content-Type': 'application/x-www-form-urlencoded' };\r",
					"  if (isConfidential) {\r",
					"    headers['Authorization'] = 'Basic ' + btoa(`${client_id}:${client_secret}`);\r",
					"  }\r",
					"\r",
					"  const body = [];\r",
					"  if (grant === 'password') {\r",
					"    if (!username || !password) throw new Error('auth_grant=password pero faltan username/password.');\r",
					"    body.push({ key: 'grant_type', value: 'password' });\r",
					"    body.push({ key: 'username',  value: username });\r",
					"    body.push({ key: 'password',  value: password });\r",
					"    if (!isConfidential) body.push({ key: 'client_id', value: client_id }); // cliente public\r",
					"  } else {\r",
					"    // client_credentials\r",
					"    body.push({ key: 'grant_type', value: 'client_credentials' });\r",
					"    if (!isConfidential) body.push({ key: 'client_id', value: client_id }); // (Keycloak suele no permitirlo en public)\r",
					"  }\r",
					"  if (scope) body.push({ key: 'scope', value: scope });\r",
					"\r",
					"  log('Solicitando token', { tokenUrl, grant, isConfidential });\r",
					"\r",
					"  pm.sendRequest({\r",
					"    url: tokenUrl,\r",
					"    method: 'POST',\r",
					"    header: headers,\r",
					"    body: { mode: 'urlencoded', urlencoded: body },\r",
					"  }, function (err, res) {\r",
					"    if (err) throw new Error('Error solicitando token: ' + err);\r",
					"\r",
					"    let data;\r",
					"    try { data = res.json(); }\r",
					"    catch { throw new Error('Respuesta token no JSON: ' + res.text()); }\r",
					"\r",
					"    if (!data || !data.access_token) {\r",
					"      throw new Error('Sin access_token de Keycloak: ' + res.text());\r",
					"    }\r",
					"\r",
					"    pm.environment.set('access_token', data.access_token);\r",
					"    const ttl = parseInt(data.expires_in || '300', 10);\r",
					"    pm.environment.set('token_expiry', String(now + ttl));\r",
					"    log('Nuevo token OK. TTL:', ttl, 's');\r",
					"  });\r",
					"})();\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/"
		}
	]
}